{"version":3,"sources":["pages/commonStyles.module.css","components/modal-overlay/modal-overlay.module.css","components/orders/orders.module.css","components/order-card/order-card.module.css","components/feed-order-details/feed-order-details.module.css","reportWebVitals.ts","utils/hooks.ts","components/app-header/app-header.tsx","images/img.png","constants.ts","utils/getData.ts","services/actions/actions.ts","components/ingredient-card/ingredient-card.tsx","components/burger-ingredients/burger-ingredients.tsx","components/constructor-card/constructor-card.tsx","images/done.gif","components/order-details/order-details.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","components/burger-constructor/burger-constructor.tsx","pages/not-found.tsx","services/actions/user-actions.ts","pages/login.tsx","pages/register.tsx","components/ingredient-details/ingredient-details.tsx","pages/ingredient.tsx","pages/forgot-password.tsx","pages/reset-password.tsx","services/actions/ws-actions.ts","utils/date.ts","components/order-card/order-card.tsx","components/orders/orders.tsx","pages/profile.tsx","components/protected-route/protected-route.tsx","components/feed-order-details/feed-order-details.tsx","components/feed/feed.tsx","pages/order-card-details.tsx","pages/profile-order-details.tsx","components/app/app.tsx","services/reducers/reducers.ts","services/reducers/user-reducers.ts","services/reducers/ws-redusers.ts","services/reducers/index.ts","services/store.ts","services/socket-middleware.ts","index.tsx","components/burger-constructor/burger-constructor.module.css","components/feed/feed.module.css","components/app-header/app-header.module.css","components/ingredient-details/indredient-details.module.css","components/order-details/order-details.module.css","components/burger-ingredients/burger-ingredients.module.css","components/ingredient-card/ingredient-card.module.css","components/modal/modal.module.css","pages/not-found.module.css","components/app/app.module.css","components/constructor-card/constructor-card.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useSelector","selectorHook","useDispatch","dispatchHook","AppHeader","currentPage","useLocation","pathname","split","headerClasses","styles","header","navClasses","nav","itemClasses","navItem","logoClasses","logo","activeClass","inactiveClass","className","content","to","type","login","API_URL","getIngredientsData","a","fetch","res","checkResponse","getOrderData","orderList","token","localStorage","getItem","method","headers","authorization","body","JSON","stringify","ingredients","register","user","mode","logout","forgotRequest","resetRequest","getUserData","patchUserData","getAccessToken","getRequestBody","text","parse","message","obj","ok","Error","accessToken","setItem","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_ERROR","ADD_CONSTRUCTOR_INGREDIENT","DELETE_CONSTRUCTOR_INGREDIENT","CLEAR_CONSTRUCTOR","CHANGE_INGREDIENTS_ORDER","SET_INGREDIENT_DETAILS","DELETE_INGREDIENT_DETAILS","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","GET_ORDER_ERROR","CLEAR_ORDER","guid","s4","Math","floor","random","toString","substring","IngredientCard","card","dispatch","history","useHistory","location","useState","isVisible","setVisible","useDrag","item","collect","monitor","opacity","isDragging","dragRef","store","reducer","constructorIngredients","count","value","buns","_id","toppings","cardClasses","costClasses","cost","descriptionClasses","description","ref","style","onClick","push","background","size","image","alt","src","price","name","BurgerIngredients","React","current","setCurrent","ingredientsClasses","title","cards","scrollContClasses","scrollCont","sauces","main","bunsRef","useRef","saucesRef","mainRef","sortIngredients","tabs","active","onScroll","e","scrollPos","currentTarget","scrollTop","bunsPos","offsetTop","saucesPos","mainPos","map","ConstructorCard","moveCard","index","moveRef","listItem","drag","useDrop","accept","hover","dragIndex","findIndex","elem","isOver","drop","isLocked","thumbnail","handleClose","OrderDetails","orderInfo","order","idStyles","id","idTextStyles","idText","light","imageStyles","lightTextStyles","navyTextStyles","navy","number","ModalOverlay","children","close","modalOverlay","stopPropagation","target","Modal","modalRoot","document","getElementById","closeIconClasses","closeIcon","modalClasses","orderDetails","titleClasses","escapeClose","key","useEffect","addEventListener","removeEventListener","createPortal","BurgerConstructor","userReducer","total","setTotal","constructor","list","top","center","bottom","totalClass","totalCountClass","totalCount","totalContClass","totalCont","linkClass","link","sendOrder","event","preventDefault","bun","topping","catch","console","log","getOrder","sum","calcSum","dropRef","useCallback","hoverIndex","info","email","NotFound404","wrapper","container","REGISTER_USER_REQUEST","REGISTER_USER_REQUEST_SUCCESS","REGISTER_USER_REQUEST_FAILED","LOGIN_REQUEST","LOGIN_REQUEST_SUCCESS","LOGIN_REQUEST_FAILED","SET_IS_AUTH","RESET_IS_AUTH","SET_USER","RESET_USER","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_REQUEST_SUCCESS","FORGOT_PASSWORD_REQUEST_FAILED","RESET_PASSWORD_REQUEST","RESET_PASSWORD_REQUEST_SUCCESS","RESET_PASSWORD_REQUEST_FAILED","GET_USER_REQUEST","GET_USER_REQUEST_SUCCESS","GET_USER_REQUEST_FAILED","LOGOUT_REQUEST","LOGOUT_REQUEST_SUCCESS","LOGOUT_REQUEST_FAILED","getUser","refreshToken","Login","password","form","setValue","loginUserSuccess","fromPage","state","from","replace","onChange","linkClasses","page","onSubmit","loginUser","placeholder","Register","registerUserSuccess","registerUser","IngredientDetails","useParams","setCard","tCard","ingredientDetails","crd","find","i","imageClasses","textClasses","details","cont","undefined","detailsCard","calories","proteins","fat","carbohydrates","Ingredient","ingredient","ForgotPassword","forgotPasswordSuccess","forgotPassword","ResetPassword","resetPasswordSuccess","resetPassword","WS_START","WS_PRIVAT_START","WS_GET_MESSAGE","WS_CONNECTION_CLOSE","getDate","tDate","createdAt","moment","Date","locale","calendar","OrderCard","reduce","prev","el","statusText","status","orderDate","contClass","numberClass","dateClass","date","nameClass","totalCost","imageContClass","items","statusClass","restClass","images","array","Set","uniqIngredients","filter","itemId","currentIngredient","rest","length","imageBorder","Orders","orders","wsReduser","payload","reverse","Profile","edited","setEdited","touched","setTouched","isOrders","includes","profileLink","activeLinkClasses","profilePage","logoutUser","onFocus","forEach","patchUser","icon","ProtectedRoute","render","FeedOrderDetails","Number","ingredientsIds","orderIngredients","prepareIngredients","filterIngredients","arr","indexOf","ingredContClass","ingredCont","footerClass","footer","sumClass","backgroundImage","image_mobile","backgroundPosition","Feed","totalToday","scrollOrdersCont","right","orderContClass","ordersCont","orderListClass","ordersList","ordersClass","ordersWidth","orderClass","feed","feedCont","left","OrderCardDetails","pUrl","App","handleCloseModal","goBack","path","exact","DndProvider","backend","HTML5Backend","component","NotFound","initialState","ingredientsRequest","ingredientsError","orderRequest","orderError","ingredientsFailed","orderFailed","registerUserRequest","registerUserRequestFailed","forgotPasswordRequest","forgotPasswordRequestFailed","resetPasswordRequest","resetPasswordRequestFailed","isAuth","loginRequest","loginRequestFailed","getUserRequest","getUserRequestFailed","isUserLoaded","wsConnected","rootReducer","combineReducers","action","data","movedElement","update","$splice","newOrderArr","removeItem","wsActions","wsInit","wsPrivatInit","wsClose","onOpen","onMessage","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","wsUrl","socket","next","WebSocket","onopen","onmessage","onclose","socketMiddleware","createStore","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.727a3d00.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"commonStyles_page__RgHLc\",\"profilePage\":\"commonStyles_profilePage__32iZG\",\"link\":\"commonStyles_link__nhBjk\",\"profileLink\":\"commonStyles_profileLink__1yAyp\",\"nav\":\"commonStyles_nav__2YJHQ\",\"form\":\"commonStyles_form__35P2D\",\"ingredient\":\"commonStyles_ingredient__1JPV4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalOverlay\":\"modal-overlay_modalOverlay__tfXD-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cont\":\"orders_cont__RN1yK\",\"link\":\"orders_link__1KjGE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cont\":\"order-card_cont__1T4wa\",\"top\":\"order-card_top__22sco\",\"items\":\"order-card_items__2yoGX\",\"images\":\"order-card_images__wE5Eu\",\"totalCost\":\"order-card_totalCost__3I0Qx\",\"done\":\"order-card_done__3lduW\",\"canceled\":\"order-card_canceled__193MT\",\"imageBorder\":\"order-card_imageBorder__wxRSS\",\"image\":\"order-card_image__1LH_h\",\"count\":\"order-card_count__grZBq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cont\":\"feed-order-details_cont__1J7KV\",\"name\":\"feed-order-details_name__34eZa\",\"ingredContClass\":\"feed-order-details_ingredContClass__3ll7I\",\"footer\":\"feed-order-details_footer__1t3w6\",\"totalCost\":\"feed-order-details_totalCost__1G4rj\",\"done\":\"feed-order-details_done__1F861\",\"scrollCont\":\"feed-order-details_scrollCont__3XkPg\",\"total\":\"feed-order-details_total__LH4GE\",\"ingredient\":\"feed-order-details_ingredient__3LvTf\",\"info\":\"feed-order-details_info__2YS22\",\"status\":\"feed-order-details_status__1X28e\",\"ingredients\":\"feed-order-details_ingredients__2hdwC\",\"image\":\"feed-order-details_image__CDGvC\",\"sum\":\"feed-order-details_sum__1tpqs\",\"number\":\"feed-order-details_number__2x956\"};","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import { TypedUseSelectorHook, useDispatch as dispatchHook, useSelector as selectorHook } from 'react-redux'\nimport { AppDispatch, AppThunk, RootState } from '../types/data-types'\n\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>()\n","import React, {FC} from 'react';\nimport styles from './app-header.module.css';\nimport {Logo} from '@ya.praktikum/react-developer-burger-ui-components';\nimport {BurgerIcon} from '@ya.praktikum/react-developer-burger-ui-components';\nimport {ListIcon} from '@ya.praktikum/react-developer-burger-ui-components';\nimport {ProfileIcon} from '@ya.praktikum/react-developer-burger-ui-components';\nimport {Link} from \"react-router-dom\";\nimport {useLocation} from 'react-router-dom';\n\nconst AppHeader:FC = () => {\n    const location = useLocation();\n    const currentPage = location.pathname.split('/')[1];\n\n    const headerClasses = `mb-5 ${styles.header}`\n    const navClasses = `${styles.nav}`\n    const itemClasses = `pr-5 pl-5 ${styles.navItem}`\n    const logoClasses = `pt-4 pr-5 pb-4 pl-5 ${styles.logo}`\n    const activeClass = 'text text_type_main-default pl-2';\n    const inactiveClass = 'text text_type_main-default pl-2 text_color_inactive';\n    return (\n        <header className={headerClasses}>\n            <div className={styles.content}>\n                <nav className={navClasses}>\n                    <Link to='./' className={itemClasses}>\n                        <h2 className={styles.navItem}>\n                            <BurgerIcon type={currentPage === '' ? 'primary' : 'secondary'}/>\n                            <span className={currentPage === '' ? activeClass : inactiveClass}>Конструктор</span>\n                        </h2>\n                    </Link>\n                    <Link to='/feed' className={itemClasses}>\n                        <h2 className={styles.navItem}>\n                            <ListIcon type={currentPage === 'feed' ? 'primary' : 'secondary'}/>\n                            <span\n                                className={currentPage === 'feed' ? activeClass : inactiveClass}>Лента заказов</span>\n                        </h2>\n                    </Link>\n                </nav>\n                <h2 className={logoClasses}>\n                    <Link to='/'>\n                        <Logo/>\n                    </Link>\n                </h2>\n                <Link to='/profile/orders' className={styles.login}>\n                    <h2 className={styles.login}>\n                        <ProfileIcon type={currentPage === 'profile' ? 'primary' : 'secondary'}/>\n                        <span className={currentPage === 'profile' ? activeClass : inactiveClass}>Личный кабинет</span>\n                    </h2>\n                </Link>\n            </div>\n        </header>\n    );\n};\n\nexport default AppHeader;\n","export default __webpack_public_path__ + \"static/media/img.9eef3adb.png\";","export const API_URL = 'https://norma.nomoreparties.space/api';\nexport const WS_API_URL: string = 'wss://norma.nomoreparties.space';\nexport const PUBLIC_URL: string = '/yap_burger'\n","import { API_URL } from '../constants'\nimport { TCard, TUser } from '../types/data-types'\n\nconst getIngredientsData = async () => {\n  const res = await fetch(`${API_URL}/ingredients`)\n  return checkResponse(res)\n}\n\nconst getOrderData = async (orderList: Array<TCard>) => {\n  const token = localStorage.getItem('accessToken')\n  const res = await fetch(`${API_URL}/orders`, {\n    method: 'POST',\n    //@ts-ignore\n    headers: { 'Content-Type': 'application/json', authorization: token },\n    body: JSON.stringify({\n      ingredients: orderList\n    })\n  })\n  return checkResponse(res)\n}\n\nconst register = async (user: TUser) => {\n  const res = await fetch(`${API_URL}/auth/register`, {\n    method: 'POST',\n    mode: 'cors',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(user)\n  })\n  return checkResponse(res)\n}\n\nconst login = async (user: TUser) => {\n  const res = await fetch(`${API_URL}/auth/login`, {\n    method: 'POST',\n    mode: 'cors',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(user)\n  })\n  return checkResponse(res)\n}\n\nconst logout = async (user: TUser) => {\n  const token = localStorage.getItem('refreshToken')\n  const res = await fetch(`${API_URL}/auth/logout`, {\n    method: 'POST',\n    mode: 'cors',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ token })\n  })\n  return checkResponse(res)\n}\n\nconst forgotRequest = async (user: TUser) => {\n  const res = await fetch(`${API_URL}/password-reset`, {\n    method: 'POST',\n    mode: 'cors',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(user)\n  })\n  return checkResponse(res)\n}\n\nconst resetRequest = async (user: TUser) => {\n  const res = await fetch(`${API_URL}/password-reset/reset`, {\n    method: 'POST',\n    mode: 'cors',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(user)\n  })\n  return checkResponse(res)\n}\n\nconst getUserData = async (token: string) => {\n  const res = await fetch(`${API_URL}/auth/user`, {\n    method: 'GET',\n    mode: 'cors',\n    headers: { 'Content-Type': 'application/json', authorization: token }\n  })\n  return checkResponse(res)\n}\n\nconst patchUserData = async (user: TUser, token: string) => {\n  const res = await fetch(`${API_URL}/auth/user`, {\n    method: 'PATCH',\n    mode: 'cors',\n    headers: { 'Content-Type': 'application/json', authorization: token },\n    body: JSON.stringify(user)\n  })\n  return checkResponse(res)\n}\n\nconst getAccessToken = async () => {\n  const token = localStorage.getItem('refreshToken')\n  if (!token) return '' /*throw new Error('Авторизуйтесь')*/\n  const res = await fetch(`${API_URL}/auth/token`, {\n    method: 'POST',\n    mode: 'cors',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ token })\n  })\n  return checkResponse(res)\n}\n\nasync function getRequestBody(res: Response) {\n  const text = await res.text()\n  try {\n    return JSON.parse(text)\n  } catch {\n    return { message: text }\n  }\n}\n\nasync function checkResponse(res: Response) {\n  const obj = await getRequestBody(res)\n  if (!res.ok) {\n    throw new Error(obj.message)\n  }\n  if (obj.accessToken) localStorage.setItem('accessToken', obj.accessToken)\n  return obj\n}\n\nexport {\n  getIngredientsData,\n  getOrderData,\n  register,\n  login,\n  forgotRequest,\n  getUserData,\n  logout,\n  getAccessToken,\n  patchUserData,\n  resetRequest\n}\n","import { getIngredientsData, getOrderData } from '../../utils/getData';\nimport {TIngredients, AppDispatch, TOrder, TCard, TIngredientDetails, AppThunk} from \"../../types/data-types\";\n\nexport const GET_INGREDIENTS_REQUEST: 'GET_INGREDIENTS_REQUEST' = 'GET_INGREDIENTS_REQUEST';\nexport const GET_INGREDIENTS_SUCCESS: 'GET_INGREDIENTS_SUCCESS' = 'GET_INGREDIENTS_SUCCESS';\nexport const GET_INGREDIENTS_ERROR: 'GET_INGREDIENTS_ERROR' = 'GET_INGREDIENTS_ERROR';\n\nexport const ADD_CONSTRUCTOR_INGREDIENT: 'ADD_CONSTRUCTOR_INGREDIENT' = 'ADD_CONSTRUCTOR_INGREDIENT';\nexport const DELETE_CONSTRUCTOR_INGREDIENT: 'DELETE_CONSTRUCTOR_INGREDIENT' = 'DELETE_CONSTRUCTOR_INGREDIENT';\nexport const CLEAR_CONSTRUCTOR: 'CLEAR_CONSTRUCTOR' = 'CLEAR_CONSTRUCTOR';\nexport const CHANGE_INGREDIENTS_ORDER: 'CHANGE_INGREDIENTS_ORDER' = 'CHANGE_INGREDIENTS_ORDER';\n\nexport const SET_INGREDIENT_DETAILS: 'SET_INGREDIENT_DETAILS' = 'SET_INGREDIENT_DETAILS';\nexport const DELETE_INGREDIENT_DETAILS: 'DELETE_INGREDIENT_DETAILS' = 'DELETE_INGREDIENT_DETAILS';\n\nexport const GET_ORDER_REQUEST: 'GET_ORDER_REQUEST' = 'GET_ORDER_REQUEST';\nexport const GET_ORDER_SUCCESS: 'GET_ORDER_SUCCESS' = 'GET_ORDER_SUCCESS';\nexport const GET_ORDER_ERROR: 'GET_ORDER_ERROR' = 'GET_ORDER_ERROR';\nexport const CLEAR_ORDER: 'CLEAR_ORDER' = 'CLEAR_ORDER';\n\nexport type TActions =\n    IGetIngredientsRequest |\n    IGetIngredientsSuccess |\n    IGetIngredientsFailed |\n    IGetOrderRequest |\n    IGetOrderSuccess |\n    IGetOrderFailed |\n    IClearOrder |\n    IAddConstructorIngredient |\n    IDeleteConstructorIngredient |\n    ISetIngredientDetails |\n    IDeleteIngredientsDetail |\n    IChangeIngredientsOrder |\n    IClearConstructor;\n\nexport interface IGetIngredientsRequest {\n  readonly type: typeof GET_INGREDIENTS_REQUEST;\n}\n\nexport interface IGetIngredientsSuccess {\n  readonly type: typeof GET_INGREDIENTS_SUCCESS;\n  readonly ingredients: {\n    data: TIngredients\n  }\n}\n\nexport interface IGetIngredientsFailed {\n  readonly type: typeof GET_INGREDIENTS_ERROR;\n}\n\nexport interface IGetOrderRequest {\n  readonly type: typeof GET_ORDER_REQUEST;\n}\n\nexport interface IGetOrderSuccess {\n  readonly type: typeof GET_ORDER_SUCCESS;\n  readonly order: TOrder\n}\n\nexport interface IGetOrderFailed {\n  readonly type: typeof GET_ORDER_ERROR;\n}\n\nexport interface IClearOrder {\n  readonly type: typeof CLEAR_ORDER;\n}\n\nexport interface IAddConstructorIngredient {\n  readonly type: typeof ADD_CONSTRUCTOR_INGREDIENT;\n  readonly card: TCard;\n}\n\nexport interface IDeleteConstructorIngredient {\n  readonly type: typeof DELETE_CONSTRUCTOR_INGREDIENT;\n  readonly card: TCard;\n  readonly guid?: string;\n}\nexport interface IClearConstructor {\n  readonly type: typeof CLEAR_CONSTRUCTOR;\n}\n\nexport interface ISetIngredientDetails {\n  readonly card: TIngredientDetails;\n  readonly type: typeof SET_INGREDIENT_DETAILS;\n}\n\nexport interface IDeleteIngredientsDetail {\n  readonly type: typeof DELETE_INGREDIENT_DETAILS;\n}\n\nexport interface IChangeIngredientsOrder {\n  readonly type: typeof CHANGE_INGREDIENTS_ORDER;\n  readonly hoverIndex: number;\n  readonly dragIndex: number\n}\n\n\nexport const getIngredients: AppThunk = () => async (dispatch: AppDispatch) => {\n    dispatch({\n      type: GET_INGREDIENTS_REQUEST\n    })\n    getIngredientsData()\n      .then(res => {\n        if (res) {\n          dispatch({\n            type: GET_INGREDIENTS_SUCCESS,\n            ingredients: res\n          })\n        } else {\n          dispatch({\n            type: GET_INGREDIENTS_ERROR\n          })\n        }\n      })\n      .catch(e => {\n        console.log(e)\n        dispatch({\n          type: GET_INGREDIENTS_ERROR\n        })\n      })\n}\n\nexport const getOrder: AppThunk = (orderList: TIngredients) => async (dispatch: AppDispatch) => {\n    dispatch({\n      type: GET_ORDER_REQUEST\n    })\n    getOrderData(orderList)\n      .then(res => {\n        if (res) {\n          dispatch({\n            type: GET_ORDER_SUCCESS,\n            order: res\n          })\n        } else {\n          dispatch({\n            type: GET_ORDER_ERROR\n          })\n        }\n      })\n      .catch(e => {\n        console.log(e)\n        dispatch({\n          type: GET_ORDER_ERROR\n        })\n      })\n}\n","import React, {useState, FC} from 'react';\nimport styles from './ingredient-card.module.css';\nimport {Counter} from '@ya.praktikum/react-developer-burger-ui-components';\nimport image from '../../images/img.png';\nimport {CurrencyIcon} from '@ya.praktikum/react-developer-burger-ui-components';\nimport {useDispatch, useSelector} from '../../utils/hooks';\nimport {useDrag} from 'react-dnd';\nimport {useHistory, useLocation} from 'react-router-dom';\nimport {SET_INGREDIENT_DETAILS} from \"../../services/actions/actions\";\nimport {TIngredientCard} from \"../../types/data-types\";\n\n\nconst IngredientCard:FC<TIngredientCard> = ({card}) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const location = useLocation();\n    const [isVisible, setVisible] = useState(false);\n\n    const [{opacity}, dragRef] = useDrag({\n        type: 'card',\n        item: {card: {...card, guid: guid()}},\n        collect: monitor => ({\n            opacity: monitor.isDragging() ? 0.5 : 1,\n        }),\n    })\n    const ingredients = useSelector(store => store.reducer.constructorIngredients);\n    const count = () => {\n        let value = 0;\n        for (let bun of ingredients.buns)\n            if (bun._id === card._id) value += 2;\n        for (let topping of ingredients.toppings)\n            if (topping._id === card._id) value += 1;\n        return value;\n    }\n\n    const openModal = () => {\n        setVisible(!isVisible);\n        dispatch({\n            type: SET_INGREDIENT_DETAILS,\n            card\n        });\n        history.push(`/ingredients/${card._id}`, {background: location});\n    }\n\n    const cardClasses = `mt-5 mr-5 mb-8 ${styles.card}`;\n    const costClasses = `mt-1 mr-5 ${styles.cost}`;\n    const descriptionClasses = `mt-5 mr-5 text text_type_main-default ${styles.description}`;\n\n    return (\n        <div className={cardClasses} ref={dragRef} style={{opacity}} onClick={openModal}>\n            {count() > 0 && <Counter count={count()} size=\"default\"/>}\n            <div className={image}>\n                <img className={styles.image} alt='Фото ингредиента' src={card.image}/>\n            </div>\n            <div className={costClasses}>\n                <p className=\"pr-1 text text_type_digits-default\">{card.price}</p>\n                <CurrencyIcon type=\"primary\"/>\n            </div>\n            <p className={descriptionClasses}>{card.name}</p>\n        </div>\n    );\n};\n\nfunction guid() {\n    function s4() {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n        s4() + '-' + s4() + s4() + s4();\n}\n\nexport default IngredientCard;\n","import React, {useRef, SyntheticEvent, FC} from 'react';\nimport styles from './burger-ingredients.module.css';\nimport {Tab} from '@ya.praktikum/react-developer-burger-ui-components';\nimport IngredientCard from \"../ingredient-card/ingredient-card\";\nimport {useSelector} from '../../utils/hooks';\n\nimport {TCard, TIngredients} from \"../../types/data-types\";\n\nconst BurgerIngredients:FC = () => {\n    const ingredients = useSelector(store => store.reducer.ingredients);\n    const [current, setCurrent] = React.useState('Булки');\n    const ingredientsClasses = `mt-5 mr-5 ${styles.ingredients}`;\n    const title = `mb-6 ${styles.title}`;\n    const cards = `ml-4 mb-8 ${styles.cards}`;\n    const scrollContClasses = `custom-scroll mt-10 mb-10 ${styles.scrollCont}`;\n\n    const buns: Array<TCard> = [];\n    const sauces: Array<TCard> = [];\n    const main: Array<TCard> = [];\n\n    function sortIngredients(ingredients: TIngredients) {\n        for (const item of ingredients) {\n            if (item.type === 'bun') buns.push(item);\n            if (item.type === 'sauce') sauces.push(item);\n            if (item.type === 'main') main.push(item);\n        }\n    }\n\n    const bunsRef = useRef<HTMLElement>(null!);\n    const saucesRef = useRef<HTMLElement>(null!);\n    const mainRef = useRef<HTMLElement>(null!);\n\n    function handleScroll(e: SyntheticEvent ) {\n        const scrollPos = e.currentTarget.scrollTop;\n        const bunsPos = bunsRef.current.offsetTop / 2;\n        const saucesPos = saucesRef.current.offsetTop / 2;\n        const mainPos = mainRef.current.offsetTop / 2;\n\n        if (scrollPos >= bunsPos) setCurrent('Булки');\n        if (scrollPos >= saucesPos) setCurrent('Соусы');\n        if (scrollPos >= mainPos) setCurrent('Начинки');\n    }\n\n    if (ingredients) sortIngredients(ingredients);\n\n    return (\n        <div className={ingredientsClasses}>\n            <nav className={styles.tabs}>\n                <Tab value=\"Булки\" active={current === 'Булки'} onClick={setCurrent}>\n                    Булки\n                </Tab>\n                <Tab value=\"Соусы\" active={current === 'Соусы'} onClick={setCurrent}>\n                    Соусы\n                </Tab>\n                <Tab value=\"Начинки\" active={current === 'Начинки'} onClick={setCurrent}>\n                    Начинки\n                </Tab>\n            </nav>\n            <div className={scrollContClasses} onScroll={handleScroll}>\n                <section ref={bunsRef}>\n                    <h2 className={title}>Булки</h2>\n                    <div className={cards}>\n                        {buns.map((card) => (\n                            <IngredientCard key={card._id} card={card}/>\n                        ))}\n                    </div>\n                </section>\n                <section ref={saucesRef}>\n                    <h2 className={title}>Соусы</h2>\n                    <div className={cards}>\n                        {sauces.map((card) => (\n                            <IngredientCard key={card._id} card={card}/>\n                        ))}\n                    </div>\n                </section>\n                <section ref={mainRef}>\n                    <h2 className={title}>Начинки</h2>\n                    <div className={cards}>\n                        {main.map((card) => (\n                            <IngredientCard key={card._id} card={card}/>\n                        ))}\n                    </div>\n                </section>\n            </div>\n        </div>\n    );\n};\n\nexport default BurgerIngredients;\n","import React, {useRef, FC} from 'react';\nimport styles from './constructor-card.module.css';\nimport {ConstructorElement, DragIcon} from '@ya.praktikum/react-developer-burger-ui-components';\nimport {useDispatch, useSelector} from '../../utils/hooks';\nimport {useDrag, useDrop} from 'react-dnd';\nimport {\n    DELETE_CONSTRUCTOR_INGREDIENT\n} from \"../../services/actions/actions\";\nimport {TCard, TConstCard} from \"../../types/data-types\";\n\nexport const ConstructorCard: FC<TConstCard> = ({card, moveCard, type, index}) => {\n    const dispatch = useDispatch();\n    const moveRef = useRef(null);\n    const ingredients = useSelector(store => store.reducer.constructorIngredients);\n\n    const listItem = `mr-1 ${styles.listItem}`;\n\n    const deleteIngredient = (guid: string) => {\n        dispatch({\n            type: DELETE_CONSTRUCTOR_INGREDIENT,\n            guid\n        })\n    }\n\n    const [, drag] = useDrag({\n        type: 'card',\n        item: card,\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n    })\n\n    const [{opacity}, drop] = useDrop({\n        accept: 'card',\n        hover: (card: TCard) => {\n            const dragIndex: number = ingredients.toppings.findIndex((elem: { _id: string; }) => elem._id === card._id);\n            if (dragIndex === -1) return;\n            if (moveCard) moveCard(dragIndex, index)\n        },\n        collect: (monitor) => ({\n            opacity: monitor.isOver() ? 0.2 : 1\n        })\n    })\n\n    drag(drop(moveRef))\n\n    return (\n        type === 'top' ?\n            <ConstructorElement\n                type=\"top\"\n                isLocked={true}\n                text={card.name + ' (верх)'}\n                price={card.price}\n                thumbnail={card.image}\n            />\n            :\n            type === 'bottom' ?\n                <ConstructorElement\n                    type=\"bottom\"\n                    isLocked={true}\n                    text={card.name + ' (низ)'}\n                    price={card.price}\n                    thumbnail={card.image}\n                /> :\n                <div\n                    ref={moveRef}\n                    style={{opacity}}\n                    className={listItem}>\n                    <DragIcon type=\"primary\"/>\n                    <ConstructorElement handleClose={() => {\n                        deleteIngredient(card.guid!)\n                    }}\n                                        text={card.name}\n                                        price={card.price}\n                                        thumbnail={card.image}\n                    />\n                </div>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/done.cc5a59a7.gif\";","import React, {FC} from 'react';\nimport styles from './order-details.module.css';\nimport image from '../../images/done.gif';\nimport {useSelector} from '../../utils/hooks';\n\nconst OrderDetails:FC = () => {\n    const orderInfo = useSelector(store => store.reducer.order);\n    const idStyles = `text text_type_digits-large pb-6 ${styles.id}`;\n    const idTextStyles = `text text_type_main-medium pb-15 ${styles.idText} ${styles.light}`;\n    const imageStyles = `pb-15 ${styles.image}`;\n    const lightTextStyles = `pb-2  text text_type_main-default ${styles.light}`;\n    const navyTextStyles = `text text_type_main-default ${styles.navy}`;\n    return (\n        <>\n            {orderInfo.order && <p className={idStyles}>{orderInfo.order.number}</p>}\n            <p className={idTextStyles}>идентификатор заказа</p>\n            <img className={imageStyles} alt=\"Заказ принят\" src={image}/>\n            {orderInfo.name && <p className={lightTextStyles}>Ваш заказ \"{orderInfo.name}\" начали готовить</p>}\n            <p className={navyTextStyles}>Дождитесь готовности на орбитальной станции</p>\n        </>\n    );\n}\n\nexport default OrderDetails;\n","import React, {FC, SyntheticEvent} from 'react';\nimport styles from './modal-overlay.module.css';\nimport {TModalOverlay} from \"../../types/data-types\";\n\nconst ModalOverlay:FC<TModalOverlay> = ({children, close}) => {\n\n    const handleOverlayClick = (e: SyntheticEvent) => {\n        e.stopPropagation();\n        if (e.target === e.currentTarget) close();\n    }\n\n    return (\n        <div className={styles.modalOverlay}\n             onClick={handleOverlayClick}\n        >\n            {children}\n        </div>\n    )\n};\n\nexport default ModalOverlay;\n","import React, {useEffect, FC} from 'react';\nimport {createPortal} from 'react-dom';\nimport styles from './modal.module.css';\nimport {CloseIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport ModalOverlay from \"../modal-overlay/modal-overlay\";\nimport {TModal} from \"../../types/data-types\";\n\n\nconst Modal:FC<TModal> = ({children, close, title}) => {\n    const modalRoot = document.getElementById(\"react-modals\") as HTMLElement;\n    const closeIconClasses = `mt-15 mr-10 ${styles.closeIcon}`;\n    const modalClasses = `pt-30 pb-30 pl-25 pr-25 ${styles.orderDetails}`;\n    const titleClasses = ` ml-10 mt-15 text text_type_main-large ${styles.title}`\n\n    const escapeClose = (e: KeyboardEvent) => {\n        if (e.key === 'Escape') close();\n    };\n\n    useEffect(() => {\n        document.addEventListener('keydown', escapeClose);\n        return () => document.removeEventListener('keydown', escapeClose);\n    }, []);\n\n    return createPortal(\n        <ModalOverlay close={close}>\n            <div className={modalClasses}>\n                {title && <h3 className={titleClasses}>{title}</h3>\n                }\n                <div className={closeIconClasses} onClick={close}>\n                    <CloseIcon type=\"primary\"/>\n                </div>\n                {children}\n            </div>\n        </ModalOverlay>\n        , modalRoot\n    )\n};\n\nexport default Modal;\n","import React, {useState, useEffect, useCallback, FC, SyntheticEvent} from 'react';\nimport styles from './burger-constructor.module.css';\nimport {ConstructorCard} from '../constructor-card/constructor-card';\nimport {CurrencyIcon} from '@ya.praktikum/react-developer-burger-ui-components';\nimport {Button} from '@ya.praktikum/react-developer-burger-ui-components';\nimport OrderDetails from \"../order-details/order-details\";\nimport Modal from \"../modal/modal\";\nimport {useDispatch, useSelector} from '../../utils/hooks';\nimport {useDrop} from 'react-dnd';\nimport {\n    ADD_CONSTRUCTOR_INGREDIENT,\n    CLEAR_CONSTRUCTOR,\n    CLEAR_ORDER,\n    getOrder, CHANGE_INGREDIENTS_ORDER\n} from \"../../services/actions/actions\";\nimport {Link} from \"react-router-dom\";\n\nimport {TCard, TConstructorIngredients} from \"../../types/data-types\";\n\nconst BurgerConstructor:FC = () => {\n    const dispatch = useDispatch();\n    const user = useSelector(store => store.userReducer.user);\n    const ingredients = useSelector(store => store.reducer.constructorIngredients);\n    const [total, setTotal] = React.useState(0);\n    const [isVisible, setVisible] = useState(false);\n\n    const clearConstructor = () => {\n        dispatch({type: CLEAR_CONSTRUCTOR})\n    };\n    const clearOrder = () => {\n        dispatch({type: CLEAR_ORDER})\n    };\n\n    const handleCloseModal = ():void => {\n        setVisible(false);\n        clearConstructor();\n        clearOrder();\n    }\n\n    const constructor = `mt-5 ml-5 ${styles.constructor}`;\n    const list = `mt-10 ${styles.list}`;\n    const top = `${styles.top}`;\n    const center = `custom-scroll  ${styles.center}`;\n    const bottom = `${styles.bottom}`;\n    const totalClass = `mt-10 ${styles.total}`;\n    const totalCountClass = `mr-2 text text_type_digits-medium ${styles.totalCount}`;\n    const totalContClass = `mr-10 ${styles.totalCont}`;\n    const linkClass = `text text_type_main-default pl-2 ${styles.link}`\n\n    function calcSum(ingredients: TConstructorIngredients ) {\n        let sum = 0;\n        for (let bun of ingredients.buns) sum += bun.price * 2;\n        for (let topping of ingredients.toppings) sum += topping.price;\n        return sum;\n    }\n\n    function sendOrder(event: SyntheticEvent) {\n        setVisible(!isVisible);\n        event.preventDefault();\n        const orderList = [];\n        for (let bun of ingredients.buns) orderList.push(bun._id);\n        for (let topping of ingredients.toppings) orderList.push(topping._id);\n        // @ts-ignore\n        dispatch(getOrder(orderList))\n    }\n\n    useEffect(() => {\n        const res = calcSum(ingredients);\n        setTotal(res);\n    }, [ingredients])\n\n    const [, dropRef] = useDrop({\n        accept: \"card\",\n        drop(card: HTMLElement ) {\n            dispatch({\n                type: ADD_CONSTRUCTOR_INGREDIENT,\n                ...card\n            })\n        },\n    });\n\n\n    const moveCard = useCallback((dragIndex, hoverIndex) => {\n        dispatch({\n            type: CHANGE_INGREDIENTS_ORDER,\n            item: ingredients.toppings,\n            dragIndex, hoverIndex\n        })\n\n    }, [ingredients.toppings, dispatch])\n\n    return (\n        <div className={constructor} ref={dropRef}>\n            {total === 0 && <div className={styles.info}>\n                Выберите булки, начинки и соусы в левой части, и перетащите сюда\n            </div>}\n            {total !== 0 && <section className={list}>\n                <div className={top}>\n                    {ingredients.buns[0] && ingredients.buns.map((card:TCard, index: number) => (\n                        <ConstructorCard key={card.guid} index={index} card={card} type={'top'}/>\n                    ))}\n                </div>\n                <div className={center}>\n                    {ingredients.toppings && ingredients.toppings.map((card:TCard, index: number) => (\n                        <ConstructorCard card={card} type={'topping'}\n                                         key={card.guid}\n                                         index={index}\n                                         moveCard={moveCard}/>\n                    ))}\n                </div>\n                <div className={bottom}>\n                    {ingredients.buns[0] && ingredients.buns.map((card:TCard, index: number) => (\n                        <ConstructorCard card={card} key={card.guid + 'b'} index={index} type={'bottom'}/>\n                    ))}\n                </div>\n            </section>}\n            {total !== 0 && <div className={totalClass}>\n                <div className={totalContClass}>\n                    <p className={totalCountClass}>{total}</p>\n                    <CurrencyIcon type=\"primary\"/>\n                </div>\n                {user.email !== '' ? <Button type=\"primary\" size=\"large\"\n                                onClick={(event) => sendOrder(event)}\n                    >\n                        Оформить заказ\n                    </Button> :\n                    <Link to='/login' className={linkClass}>\n                        <Button type='primary'>\n                            Авторизуйтесь\n                        </Button>\n                    </Link>\n                }\n                {\n                    isVisible &&\n                    <Modal close={handleCloseModal}>\n                        <OrderDetails/>\n                    </Modal>\n                }\n            </div>}\n        </div>\n    );\n};\n\nexport default BurgerConstructor;\n","import React, { FC } from 'react'\nimport { Link } from 'react-router-dom'\nimport styles from './not-found.module.css'\n\nconst NotFound404: FC = () => {\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.container}>\n        <div className={styles.content}>\n          <h1 className={'mt-10 pt-10 text text_type_main-large'}>Oops! 404 Error</h1>\n          <p>Такой страницы не существует</p>\n          <br />\n          <Link to=\"/\" className={'mt-10 text text_type_main-medium'}>\n            Вернитесь на главную\n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default NotFound404\n","import {\n    register,\n    login,\n    forgotRequest,\n    logout,\n    getAccessToken,\n    getUserData,\n    patchUserData,\n    resetRequest\n} from '../../utils/getData'\nimport {TUser, TToken, AppDispatch, AppThunk, TIngredients} from \"../../types/data-types\";\n\nexport const REGISTER_USER_REQUEST = 'REGISTER_USER_REQUEST'\nexport const REGISTER_USER_REQUEST_SUCCESS = 'REGISTER_USER_REQUEST_SUCCESS'\nexport const REGISTER_USER_REQUEST_FAILED = 'REGISTER_USER_REQUEST_FAILED'\n\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST'\nexport const LOGIN_REQUEST_SUCCESS = 'LOGIN_REQUEST_SUCCESS'\nexport const LOGIN_REQUEST_FAILED = 'LOGIN_REQUEST_FAILED'\n\nexport const SET_IS_AUTH = 'SET_IS_AUTH'\nexport const RESET_IS_AUTH = 'RESET_IS_AUTH'\nexport const SET_USER = 'SET_USER'\nexport const RESET_USER = 'RESET_USER'\n\nexport const FORGOT_PASSWORD_REQUEST = 'FORGOT_PASSWORD_REQUEST'\nexport const FORGOT_PASSWORD_REQUEST_SUCCESS = 'FORGOT_PASSWORD_REQUEST_SUCCESS'\nexport const FORGOT_PASSWORD_REQUEST_FAILED = 'FORGOT_PASSWORD_REQUEST_FAILED'\n\nexport const RESET_PASSWORD_REQUEST = 'RESET_PASSWORD_REQUEST'\nexport const RESET_PASSWORD_REQUEST_SUCCESS = 'RESET_PASSWORD_REQUEST_SUCCESS'\nexport const RESET_PASSWORD_REQUEST_FAILED = 'RESET_PASSWORD_REQUEST_FAILED'\n\nexport const GET_USER_REQUEST = 'GET_USER_REQUEST'\nexport const GET_USER_REQUEST_SUCCESS = 'GET_USER_REQUEST_SUCCESS'\nexport const GET_USER_REQUEST_FAILED = 'GET_USER_REQUEST_FAILED'\n\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST'\nexport const LOGOUT_REQUEST_SUCCESS = 'LOGOUT_REQUEST_SUCCESS'\nexport const LOGOUT_REQUEST_FAILED = 'LOGOUT_REQUEST_FAILED'\n\nexport type TUserActions =\n    IRegisterUserRequest |\n    IRegisterUserRequestSuccess |\n    IRegisterUserRequestFailed |\n    ILoginUserRequest |\n    ILoginUserRequestSuccess |\n    ILoginUserRequestFailed |\n    ISetIsAuth |\n    IResetIsAuth |\n    ISetUser |\n    IResetUser |\n    IGetUserRequest |\n    IGetUserRequestSuccess |\n    IGetUserRequestFailed |\n    IForgotPasswordRequest |\n    IForgotPasswordSuccess |\n    IForgotPasswordFailed |\n    IResetPasswordRequest |\n    IResetPasswordSuccess |\n    IResetPasswordFailed |\n    ILogoutRequest |\n    ILogoutSuccess |\n    ILogoutFailed;\n\n\nexport interface IRegisterUserRequest {\n    readonly type: typeof REGISTER_USER_REQUEST;\n}\n\nexport interface IRegisterUserRequestSuccess {\n    readonly type: typeof REGISTER_USER_REQUEST_SUCCESS;\n}\n\nexport interface IRegisterUserRequestFailed {\n    readonly type: typeof REGISTER_USER_REQUEST_FAILED;\n}\n\nexport interface ILoginUserRequest {\n    readonly type: typeof LOGIN_REQUEST;\n}\n\nexport interface ILoginUserRequestSuccess {\n    readonly type: typeof LOGIN_REQUEST_SUCCESS;\n}\n\nexport interface ILoginUserRequestFailed {\n    readonly type: typeof LOGIN_REQUEST_FAILED;\n}\n\nexport interface ISetIsAuth {\n    readonly type: typeof SET_IS_AUTH;\n    readonly refreshToken: string;\n    readonly accessToken?: string;\n}\n\nexport interface IResetIsAuth {\n    readonly type: typeof RESET_IS_AUTH;\n}\n\nexport interface ISetUser {\n    readonly type: typeof SET_USER;\n    readonly user: TUser;\n}\n\nexport interface IResetUser {\n    readonly type: typeof RESET_USER;\n}\n\nexport interface IGetUserRequest {\n    readonly type: typeof GET_USER_REQUEST;\n}\n\nexport interface IGetUserRequestSuccess {\n    readonly type: typeof GET_USER_REQUEST_SUCCESS;\n}\n\nexport interface IGetUserRequestFailed {\n    readonly type: typeof GET_USER_REQUEST_FAILED;\n}\n\nexport interface IForgotPasswordRequest {\n    readonly type: typeof FORGOT_PASSWORD_REQUEST;\n}\n\nexport interface IForgotPasswordSuccess {\n    readonly type: typeof FORGOT_PASSWORD_REQUEST_SUCCESS;\n}\n\nexport interface IForgotPasswordFailed {\n    readonly type: typeof FORGOT_PASSWORD_REQUEST_FAILED;\n}\n\nexport interface IResetPasswordRequest {\n    readonly type: typeof RESET_PASSWORD_REQUEST;\n}\n\nexport interface IResetPasswordSuccess {\n    readonly type: typeof RESET_PASSWORD_REQUEST_SUCCESS;\n}\n\nexport interface IResetPasswordFailed {\n    readonly type: typeof RESET_PASSWORD_REQUEST_FAILED;\n}\n\nexport interface ILogoutRequest {\n    readonly type: typeof LOGOUT_REQUEST;\n}\n\nexport interface ILogoutSuccess {\n    readonly type: typeof LOGOUT_REQUEST_SUCCESS;\n}\n\nexport interface ILogoutFailed {\n    readonly type: typeof LOGOUT_REQUEST_FAILED;\n}\n\nexport const registerUser: AppThunk = (user: TUser) => async (dispatch: AppDispatch) => {\n    dispatch({type: REGISTER_USER_REQUEST})\n    register(user)\n        .then(res => {\n            if (res) {\n                dispatch({type: REGISTER_USER_REQUEST_SUCCESS})\n            } else {\n                dispatch({type: REGISTER_USER_REQUEST_FAILED})\n            }\n        })\n        .catch(e => {\n            console.log(e)\n            dispatch({type: REGISTER_USER_REQUEST_FAILED})\n        })\n}\n\nexport const loginUser: AppThunk = (user: TUser) => async (dispatch: AppDispatch) => {\n    dispatch({type: LOGIN_REQUEST})\n    login(user)\n        .then(res => {\n            if (res) {\n                dispatch({type: LOGIN_REQUEST_SUCCESS})\n                dispatch({type: SET_IS_AUTH, refreshToken: res.refreshToken})\n                dispatch({type: SET_USER, user: res.user})\n            } else {\n                dispatch({type: LOGIN_REQUEST_FAILED})\n            }\n        })\n        .catch(e => {\n            console.log(e)\n            dispatch({type: LOGIN_REQUEST_FAILED})\n        })\n}\n\nexport const patchUser: AppThunk = (user: TUser) => async (dispatch: AppDispatch) => {\n    try {\n        dispatch({type: GET_USER_REQUEST})\n        const token: TToken = await getAccessToken()\n        const res = await patchUserData(user, token.accessToken)\n        dispatch({type: GET_USER_REQUEST_SUCCESS})\n        dispatch({type: SET_USER, user: res})\n    } catch (e) {\n        dispatch({type: GET_USER_REQUEST_FAILED})\n        console.log(e)\n    }\n}\n\nexport const getUser: AppThunk = () => async (dispatch: AppDispatch) => {\n    try {\n        dispatch({type: GET_USER_REQUEST})\n        const token: TToken = await getAccessToken()\n        const res = await getUserData(token.accessToken)\n        dispatch({type: GET_USER_REQUEST_SUCCESS})\n        dispatch({type: SET_USER, user: res})\n        dispatch({type: SET_IS_AUTH, refreshToken: token.refreshToken})\n    } catch (e) {\n        dispatch({type: GET_USER_REQUEST_FAILED})\n        dispatch({type: RESET_IS_AUTH})\n    }\n}\n\nexport const forgotPassword: AppThunk = (user: TUser) => async (dispatch: AppDispatch) => {\n    dispatch({type: FORGOT_PASSWORD_REQUEST})\n    forgotRequest(user)\n        .then(res => {\n            if (res) {\n                dispatch({type: FORGOT_PASSWORD_REQUEST_SUCCESS})\n            } else {\n                dispatch({type: FORGOT_PASSWORD_REQUEST_FAILED})\n            }\n        })\n        .catch(e => {\n            dispatch({type: FORGOT_PASSWORD_REQUEST_FAILED})\n        })\n}\n\nexport const resetPassword: AppThunk = (user: TUser) => async (dispatch: AppDispatch) => {\n    dispatch({type: RESET_PASSWORD_REQUEST})\n    resetRequest(user)\n        .then(res => {\n            if (res) {\n                dispatch({type: RESET_PASSWORD_REQUEST_SUCCESS})\n            } else {\n                dispatch({type: RESET_PASSWORD_REQUEST_FAILED})\n            }\n        })\n        .catch(e => {\n            dispatch({type: RESET_PASSWORD_REQUEST_FAILED})\n        })\n}\n\nexport const logoutUser: AppThunk = (user: TUser) => async (dispatch: AppDispatch) => {\n    dispatch({type: LOGOUT_REQUEST})\n    dispatch({type: RESET_USER})\n    dispatch({type: RESET_IS_AUTH})\n    logout(user)\n        .then(res => {\n            if (res) {\n                dispatch({type: LOGOUT_REQUEST_SUCCESS})\n            } else {\n                dispatch({type: LOGOUT_REQUEST_FAILED})\n            }\n        })\n        .catch(e => {\n            console.log(e)\n            dispatch({type: LOGOUT_REQUEST_FAILED})\n        })\n}\n","import React, { useEffect, useState, FC, ChangeEvent, FormEvent } from 'react'\nimport styles from './commonStyles.module.css'\nimport { Link, Redirect } from 'react-router-dom'\nimport { loginUser } from '../services/actions/user-actions'\nimport { Input, Button, PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components'\nimport { useDispatch, useSelector } from '../utils/hooks'\nimport { useHistory } from 'react-router-dom'\n\nconst Login: FC = () => {\n  const dispatch = useDispatch()\n  const history = useHistory() as any\n  const user = useSelector(store => store.userReducer.user)\n  const [form, setValue] = useState({ email: '', password: '', name: '' })\n  const loginUserSuccess = useSelector(store => store.userReducer.loginUserSuccess)\n  function onSubmit(e: FormEvent<HTMLFormElement>) {\n    e.preventDefault()\n    dispatch(loginUser(form))\n  }\n\n  const fromPage = history.location?.state?.from;\n  useEffect(() => {\n    if (loginUserSuccess) {\n      history.replace(fromPage);\n    }\n  }, [loginUserSuccess])\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setValue({ ...form, [e.target.name]: e.target.value })\n  }\n\n  const linkClasses = `mt-10 text text_type_main-default pl-2 ${styles.link}`\n\n  return user.email !== '' && fromPage ? (\n    <Redirect to={fromPage} />\n  ) : user.email !== '' ? (\n    <Redirect to={{ pathname: '/' }} />\n  ) : (\n    <div className={styles.page}>\n      <form onSubmit={onSubmit}>\n        <h1 className={'text text_type_main-medium mb-6'}>Вход</h1>\n        <Input placeholder=\"Email\" value={form.email} name=\"email\" onChange={onChange} />\n        <div className={'mb-6'} />\n        <PasswordInput value={form.password} name=\"password\" onChange={onChange} />\n        <div className={'mb-6'} />\n        <Button type=\"primary\">Войти</Button>\n      </form>\n      <p className={'text text_type_main-default text_color_inactive mt-10 pt-10  mb-4'}>\n        Вы - новый пользователь?\n        <Link to=\"/register\" className={linkClasses}>\n          Зарегистрироваться\n        </Link>\n      </p>\n      <p className={'text text_type_main-default text_color_inactive  mb-4'}>\n        Забыли пароль?\n        <Link to=\"/forgot-password\" className={linkClasses}>\n          Восстановить пароль\n        </Link>\n      </p>\n    </div>\n  )\n}\n\nexport default Login\n","import React, { useState, FC, ChangeEvent, FormEvent } from 'react'\nimport { useDispatch, useSelector } from '../utils/hooks'\nimport styles from './commonStyles.module.css'\nimport { Link, Redirect } from 'react-router-dom'\nimport { registerUser } from '../services/actions/user-actions'\nimport { Input, Button, PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components'\n\nconst Register: FC = () => {\n  const dispatch = useDispatch()\n  const user = useSelector(store => store.userReducer.user)\n  const [form, setValue] = useState({ name: '', email: '', password: '' })\n  const registerUserSuccess = useSelector(store => store.userReducer.registerUserSuccess)\n\n  function onSubmit(e: FormEvent): void {\n    e.preventDefault()\n    dispatch(registerUser(form))\n  }\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    setValue({ ...form, [e.target.name]: e.target.value })\n  }\n\n  const linkClasses = `mt-10 text text_type_main-default pl-2 ${styles.link}`\n\n  return user.email !== '' ? (\n    <Redirect to={{ pathname: '/' }} />\n  ) : registerUserSuccess ? (\n    <Redirect to={{ pathname: '/' }} />\n  ) : (\n    <div className={styles.page}>\n      <form onSubmit={onSubmit}>\n        <h1 className={'text text_type_main-medium mb-6'}>Регистрация</h1>\n        <Input placeholder=\"Имя\" value={form.name} name=\"name\" onChange={onChange} />\n        <div className={'mb-6'} />\n        <Input placeholder=\"Email\" value={form.email} name=\"email\" onChange={onChange} />\n        <div className={'mb-6'} />\n        <PasswordInput value={form.password} name=\"password\" onChange={onChange} />\n        <div className={'mb-6'} />\n        <Button type=\"primary\">Зарегистрироваться</Button>\n      </form>\n      <p className={'text text_type_main-default text_color_inactive mt-10 pt-10  mb-4'}>\n        Уже зарегистрированы?\n        <Link to=\"/login\" className={linkClasses}>\n          Войти\n        </Link>\n      </p>\n    </div>\n  )\n}\n\nexport default Register\n","import React, {useEffect, useState, FC} from 'react';\nimport styles from './indredient-details.module.css';\nimport {useSelector} from '../../utils/hooks';\nimport {useParams} from 'react-router-dom';\nimport {TCard, TIngredientDetails} from \"../../types/data-types\";\n\nconst IngredientDetails:FC<TIngredientDetails> = () => {\n    const {id}: {id: string} = useParams();\n    const [card, setCard] = useState<TCard>();\n    const ingredients = useSelector(store => store.reducer.ingredients);\n    const tCard = useSelector(store => store.reducer.ingredientDetails);\n\n    function getCurrentIngredient() {\n        if (!id) return tCard;\n        return ingredients?.find((i: { _id: string; }) => i._id === id);\n    }\n\n    useEffect(() => {\n        const crd = getCurrentIngredient()\n        // @ts-ignore\n        setCard(crd === null ? {} : crd);\n    }, [ingredients])\n\n    const imageClasses = `pt-4 pb-8 ${styles.image}`;\n    const textClasses = `text text_type_main-medium pb-8 ${styles.idText} ${styles.light}`;\n    const details = `${styles.details}`;\n    const cont = `text text_type_main-default ${styles.navy}`;\n    const name = `pr-8 text text_type_main-default ${styles.navy}`;\n    const value = `pt-1  text text_type_digits-default ${styles.navy}`;\n\n\n    if (card === undefined) {\n        return null;\n    }\n\n    return (\n        <div className={styles.detailsCard}>\n            <img className={imageClasses} alt=\"Заказ принят\" src={card.image}/>\n            <p className={textClasses}>{card.name}</p>\n            <div className={details}>\n                <div className={cont}>\n                    <p className={name}>Калории, ккал</p>\n                    <p className={value}>{card.calories}</p>\n                </div>\n                <div className={cont}>\n                    <p className={name}>Белки, г</p>\n                    <p className={value}>{card.proteins}</p>\n                </div>\n                <div className={cont}>\n                    <p className={name}>Жиры, г</p>\n                    <p className={value}>{card.fat}</p>\n                </div>\n                <div className={cont}>\n                    <p className={name}>Углеводы, г</p>\n                    <p className={value}>{card.carbohydrates}</p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default IngredientDetails;\n","import React, { FC } from 'react'\nimport IngredientDetails from '../components/ingredient-details/ingredient-details'\nimport styles from './commonStyles.module.css'\n\nconst Ingredient: FC = () => {\n  return (\n    <div className={styles.ingredient}>\n      <span className=\"text text_type_main-large mt-10 mr-10 ml-10\">Детали ингредиента</span>\n      <IngredientDetails />\n    </div>\n  )\n}\n\nexport default Ingredient\n","import React, { useState, FC, ChangeEvent, FormEvent } from 'react'\nimport styles from './commonStyles.module.css'\nimport { Link, Redirect } from 'react-router-dom'\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components'\nimport { useDispatch, useSelector } from '../utils/hooks'\nimport { forgotPassword } from '../services/actions/user-actions'\n\nconst ForgotPassword: FC = () => {\n  const dispatch = useDispatch()\n  const user = useSelector(store => store.userReducer.user)\n  const forgotPasswordSuccess = useSelector(store => store.userReducer.forgotPasswordSuccess)\n  const [form, setValue] = useState({ email: '', name: '' })\n\n  function onSubmit(e: FormEvent<HTMLFormElement>) {\n    e.preventDefault()\n    dispatch(forgotPassword(form))\n  }\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setValue({ ...form, [e.target.name]: e.target.value })\n  }\n\n  const linkClasses = `mt-10 text text_type_main-default pl-2 ${styles.link}`\n\n  return user.email !== '' ? (\n    <Redirect to={{ pathname: '/' }} />\n  ) : forgotPasswordSuccess ? (\n    <Redirect to={{ pathname: '/reset-password' }} />\n  ) : (\n    <div className={styles.page}>\n      <form onSubmit={onSubmit}>\n        <h1 className={'text text_type_main-medium mb-6'}>Восстановление пароля</h1>\n        <Input placeholder=\"Укажите e-mail\" value={form.email} name=\"email\" onChange={onChange} />\n        <div className={'mb-6'} />\n        <Button type=\"primary\">Восстановить</Button>\n      </form>\n      <p className={'text text_type_main-default text_color_inactive mt-10 pt-10  mb-4'}>\n        Уже зарегистрированы?\n        <Link to=\"/login\" className={linkClasses}>\n          Войти\n        </Link>\n      </p>\n    </div>\n  )\n}\n\nexport default ForgotPassword\n","import React, { useState, FC, ChangeEvent, FormEvent } from 'react'\nimport styles from './commonStyles.module.css'\nimport { Link, Redirect } from 'react-router-dom'\nimport { Input, Button, PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components'\nimport { useDispatch, useSelector } from '../utils/hooks'\nimport { resetPassword } from '../services/actions/user-actions'\n\nconst ResetPassword: FC = () => {\n  const dispatch = useDispatch()\n  const user = useSelector(store => store.userReducer.user)\n  const [form, setValue] = useState({ password: '', token: '', name: '', email: '' })\n  const forgotPasswordSuccess = useSelector(store => store.userReducer.forgotPasswordSuccess)\n  const resetPasswordSuccess = useSelector(store => store.userReducer.resetPasswordSuccess)\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    setValue({ ...form, [e.target.name]: e.target.value })\n  }\n\n  function onSubmit(e: FormEvent): void {\n    e.preventDefault()\n    dispatch(resetPassword(form))\n  }\n\n  const linkClasses = `mt-10 text text_type_main-default pl-2 ${styles.link}`\n  return user.email !== '' ? (\n    <Redirect to={{ pathname: '/' }} />\n  ) : resetPasswordSuccess ? (\n    <Redirect to={{ pathname: '/' }} />\n  ) : forgotPasswordSuccess ? (\n    <div className={styles.page}>\n      <form onSubmit={onSubmit}>\n        <h1 className={'text text_type_main-medium mb-6'}>Восстановление пароля</h1>\n        <PasswordInput value={form.password} name=\"password\" onChange={onChange} />\n        <div className={'mb-6'} />\n        <Input placeholder=\"Введите код из письма\" value={form.token} name=\"token\" onChange={onChange} />\n        <div className={'mb-6'} />\n        <Button type=\"primary\">Сохранить</Button>\n      </form>\n      <p className={'text text_type_main-default text_color_inactive mt-10 pt-10  mb-4'}>\n        Вспомнили пароль?\n        <Link to=\"/login\" className={linkClasses}>\n          Войти\n        </Link>\n      </p>\n    </div>\n  ) : (\n    <Redirect to={{ pathname: '/login' }} />\n  )\n}\n\nexport default ResetPassword\n","export const WS_START: 'WS_START' = 'WS_START';\nexport const WS_PRIVAT_START: 'WS_PRIVAT_START' = 'WS_PRIVAT_START';\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\nexport const WS_GET_MESSAGE: 'WS_GET_MESSAGE' = 'WS_GET_MESSAGE';\nexport const WS_CONNECTION_CLOSE: 'WS_CONNECTION_CLOSE' = 'WS_CONNECTION_CLOSE';\n\nexport type TWsActions =\n    IWsStart |\n    IWsPrivatStart |\n    IWsConnectionSuccess |\n    IWsGetMessage |\n    IWsConnectionClose;\n\nexport interface IWsStart {\n    readonly type: typeof WS_START;\n    readonly payload: any;\n}\n\nexport interface IWsPrivatStart {\n    readonly type: typeof WS_PRIVAT_START;\n    readonly payload: any;\n}\n\nexport interface IWsConnectionSuccess {\n    readonly type: typeof WS_CONNECTION_SUCCESS;\n    readonly payload: any;\n}\n\nexport interface IWsGetMessage {\n    readonly type: typeof WS_GET_MESSAGE;\n    readonly payload: any;\n}\n\nexport interface IWsConnectionClose {\n    readonly type: typeof WS_CONNECTION_CLOSE;\n    readonly payload: any;\n}\n","import moment from 'moment'\nimport 'moment/locale/ru.js'\nimport { TOrder } from '../types/data-types'\n\nexport const getDate = (order: TOrder | undefined) => {\n  let tDate: moment.Moment\n  const createdAt = order ? order.createdAt : 0\n  tDate = moment(new Date(createdAt))\n  tDate.locale('ru')\n  return `${tDate.calendar()} i-GMT+3`\n}\n","import {CurrencyIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport React, {FC, useState} from \"react\";\nimport {useHistory, useLocation} from 'react-router-dom';\nimport {useSelector} from \"../../utils/hooks\";\nimport {TCard, TOrder} from \"../../types/data-types\";\nimport styles from './order-card.module.css';\nimport {getDate} from \"../../utils/date\";\nimport {SET_INGREDIENT_DETAILS} from \"../../services/actions/actions\";\n\ntype T = {\n    order: TOrder;\n};\n\nconst OrderCard: FC<T> = ({order}) => {\n    const history = useHistory();\n    const location = useLocation();\n    const [isVisible, setVisible] = useState(false);\n    const ingredients = useSelector(store => store.reducer.ingredients);\n\n    const total = order?.ingredients?.reduce((prev, current) => {\n        const ingredient = ingredients?.find((el) => current === el._id);\n        if(!ingredient) return 0;\n        if(ingredient.type === 'bun') return prev + (ingredient!.price*2);\n        return prev + ingredient.price;\n    }, 0);\n\n\n/*    const openModal = () => {\n        setVisible(!isVisible);\n        dispatch({\n            type: SET_INGREDIENT_DETAILS,\n            card\n        });\n        history.push(`/ingredients/${card._id}`, {background: location});\n    }*/\n    const openModal = () => {\n        setVisible(!isVisible);\n        history.push(`${location.pathname}/${order.number}`, {background: location});\n    }\n\n    const statusText:string = order.status === 'done' ? 'Выполнен'\n        : order.status === 'pending' ? 'Готовится' : 'Создан';\n\n    const orderDate: string = getDate(order);\n\n    const contClass = `${styles.cont} p-6 mr-2 mb-4`;\n    const numberClass = `${styles.number} text text_type_main-small`;\n    const dateClass = `${styles.date} text text_type_main-small text_color_inactive`\n    const nameClass = `${styles.name} text text_type_main-default mt-6`\n    const totalClass = `${styles.totalCost} text text_type_digits-default`\n    const imageContClass = `${styles.items} mt-6`\n    const res = order.status\n    const statusClass = `text text_type_main-small ${styles[res]}`;\n    const restClass = `text text_type_digits-default ${styles.count}`\n\n    function uniqIngredients(array: Array<string> | undefined) {\n        const res: any = new Set(array);\n        return [...res];\n    }\n\n    return (\n        <div className={contClass} onClick={openModal}>\n            <div className={styles.top}>\n                <span className={numberClass}>\n               #{order.number}\n                </span>\n                <span className={dateClass}>\n                            {orderDate}\n                </span>\n            </div>\n            <div className={nameClass}>\n                {order.name}\n            </div>\n            <div className={statusClass}>\n                {statusText}\n            </div>\n            <div className={imageContClass}>\n                <div className={styles.images}>\n                    {uniqIngredients(order?.ingredients).filter((itemId:string, index: number) => index < 6).map((itemId:string, index: number) => {\n                    const currentIngredient = ingredients?.find((el: TCard) => el._id === itemId);\n                    const rest = order?.ingredients ? (order?.ingredients?.length - 6) : 0\n                    return (\n                        <div className={styles.imageBorder} key={index}>\n                            <img className={styles.image} src={currentIngredient?.image} key={index} alt={'ingredient_picture'}/>\n                            {index === 5 && <span className={restClass}>+{rest}</span>}\n                        </div>)\n                })}\n                </div>\n                <div className={totalClass}>\n                    <span className=\"mr-1\">{total}</span>\n                    <CurrencyIcon type=\"primary\" />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default OrderCard;\n\n\n","import React, {useEffect, FC} from 'react';\nimport styles from './orders.module.css';\nimport { WS_PRIVAT_START, WS_CONNECTION_CLOSE } from \"../../services/actions/ws-actions\";\nimport { TOrder } from \"../../types/data-types\";\nimport {useDispatch, useSelector} from '../../utils/hooks';\n\nimport OrderCard from \"../order-card/order-card\";\n\nconst Orders:FC = () => {\n    const orders = useSelector(store => { return store.wsReduser.orders}) || [];\n    const dispatch = useDispatch();\n    const scrollCont = `custom-scroll  ${styles.cont}`;\n\n    useEffect(() => {\n        dispatch({type: WS_PRIVAT_START, payload: ''});\n        return () => {\n            dispatch({type: WS_CONNECTION_CLOSE, payload: ''})\n        }\n    }, []);\n    if(typeof orders !== 'undefined' && orders.length) {\n        return (\n            <div className={scrollCont}>\n                {[...orders].reverse().map((order: TOrder, index: number) => <OrderCard order={order} key={index} />)}\n            </div>\n        )\n    } else {\n        dispatch({type: WS_PRIVAT_START, payload: ''});\n        return null;\n    }\n};\n\nexport default Orders;\n","import { useState, useEffect, FC, FocusEvent, ChangeEvent, FormEvent, SyntheticEvent } from 'react'\nimport styles from './commonStyles.module.css'\nimport { Link, Redirect, useLocation } from 'react-router-dom'\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components'\nimport { useDispatch, useSelector } from '../utils/hooks'\nimport {getUser, logoutUser, patchUser} from '../services/actions/user-actions'\nimport Orders from '../components/orders/orders'\n\nconst Profile: FC = () => {\n  const user = useSelector(store => store.userReducer.user)\n  const location = useLocation()\n  const [edited, setEdited] = useState(false)\n  const dispatch = useDispatch()\n  const [form, setValue] = useState({ ...user, password: '12345678' })\n  const [touched, setTouched] = useState<Array<string>>([])\n\n  useEffect(() => {\n    dispatch(getUser())\n  }, [])\n\n  const isOrders = user.email !== '' && location.pathname === '/profile/orders'\n\n  useEffect(() => {\n    setValue({ ...user, password: '12345678' })\n  }, [user])\n\n  function onFocus(e: FocusEvent<HTMLFormElement>): void {\n    e.preventDefault()\n    if (e.target.name === 'password') {\n      setValue({ ...form, password: '' })\n    }\n  }\n\n  function onChange(e: ChangeEvent<HTMLInputElement>): void {\n    setEdited(true)\n    if (!touched.includes(e.target.name)) setTouched([...touched, e.target.name])\n    setValue({ ...form, [e.target.name]: e.target.value })\n  }\n\n  function onSave(e: FormEvent<HTMLFormElement>): void {\n    e.preventDefault()\n    const body: any = {}\n    // @ts-ignore\n    touched.forEach(el => (body[el] = form[el]))\n    setTouched([])\n    setEdited(false)\n    dispatch(patchUser(body))\n  }\n\n  function onCancel(e: SyntheticEvent): void {\n    e.preventDefault()\n    setValue({ ...user, password: '12345678' })\n    setEdited(false)\n  }\n\n  const logout = () => dispatch(logoutUser(user))\n\n  const linkClasses = `${styles.profileLink} text text_type_main-medium text_color_inactive pl-2`\n  const activeLinkClasses = `${styles.profileLink} mt-10 text text_type_main-medium text_color_primary pl-2`\n  return user.email === '' ? (\n    <Redirect\n      to={{\n        pathname: '/login'\n      }}\n    />\n  ) : (\n    <div className={styles.profilePage}>\n      <nav className={styles.nav}>\n        <ul>\n          <li>\n            <Link to=\"/profile\" className={!isOrders ? activeLinkClasses : linkClasses}>\n              Профиль\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/profile/orders\" className={isOrders ? activeLinkClasses : linkClasses}>\n              История заказов\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/login\" onClick={logout} className={linkClasses}>\n              Выход\n            </Link>\n          </li>\n        </ul>\n        <p className={'text text_type_main-default text_color_inactive mt-10 pt-10'}>\n          В этом разделе вы можете изменить свои персональные данные\n        </p>\n      </nav>\n      {!isOrders ? (\n        <form className={'form'} onFocus={onFocus} onSubmit={onSave}>\n          <Input placeholder=\"Имя\" value={form.name} name=\"name\" onChange={onChange} icon={'EditIcon'} />\n          <div className={'mb-6'} />\n          <Input placeholder=\"Email\" value={form.email} name=\"email\" onChange={onChange} icon={'EditIcon'} />\n          <div className={'mb-6'} />\n          <Input placeholder=\"Password\" value={form.password} name=\"password\" onChange={onChange} icon={'EditIcon'} type=\"password\" />\n          {edited && (\n            <div className=\"mt-10\">\n              <Button type=\"secondary\" onClick={onCancel}>\n                Отмена\n              </Button>\n              <Button>Сохранить</Button>\n            </div>\n          )}\n        </form>\n      ) : (\n        <Orders />\n      )}\n    </div>\n  )\n}\n\nexport default Profile\n","import {Route, Redirect} from 'react-router-dom';\nimport React, {FC} from 'react';\nimport {TProtectedRoute} from \"../../types/data-types\";\nimport {useSelector} from '../../utils/hooks';\n\nconst ProtectedRoute:FC<TProtectedRoute> = ({children, ...rest}) => {\n    const user = useSelector(store => store.userReducer.user)\n    return (\n        <Route\n            {...rest}\n            render={({location}) =>\n                user.email !== '' ? (\n                    children\n                ) : (\n                    <Redirect to={{pathname: \"/login\", state: {from: location}}}/>\n                )\n            }\n        />\n    );\n};\n\nexport default ProtectedRoute;\n","import { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport React, {FC, useState} from 'react';\nimport {useHistory, useLocation, useParams} from 'react-router-dom';\nimport { useSelector } from \"../../utils/hooks\";\nimport {TCard, TOrder} from \"../../types/data-types\";\n\nimport styles from './feed-order-details.module.css';\nimport {getDate} from \"../../utils/date\";\n\nconst FeedOrderDetails: FC = () => {\n    const history = useHistory();\n    const location = useLocation();\n    const [isVisible, setVisible] = useState(false);\n    const orders = useSelector(store => { return store.wsReduser.orders}) || [];\n    const ingredients = useSelector(store => store.reducer.ingredients);\n    const { id }: {id: string} = useParams();\n    const number = Number(id);\n    const order: TOrder | undefined = orders.find((el: TOrder) => el.number === number);\n    const orderDate: string = getDate(order);\n\n    const total = order?.ingredients?.reduce((prev, current) => {\n        const ingredient = ingredients?.find((el) => current === el._id);\n        if(!ingredient) return 0;\n        if(ingredient.type === 'bun') return prev + (ingredient!.price*2);\n        return prev + ingredient.price;\n    }, 0);\n    const ingredientsIds = order?.ingredients;\n    const orderIngredients = prepareIngredients();\n\n    function prepareIngredients() {\n        let orderIngredients = [];\n        if (!ingredientsIds) return [];\n        for (const item of ingredientsIds) {\n            orderIngredients.push(\n                ingredients?.find((el: TCard) => el._id === item)\n            );\n        }\n        return orderIngredients;\n    }\n    const filterIngredients = orderIngredients\n        .filter((item, index, arr) => arr.indexOf(item) === index)\n        .map((item) => [item, orderIngredients.filter((el) => el === item).length]);\n\n    const openModal = () => {\n        setVisible(!isVisible);\n        history.push(`${location.pathname}/${number}`, {background: location});\n    }\n    const statusText:string = order?.status === 'done' ? 'Выполнен'\n        : order?.status === 'pending' ? 'Готовится' : 'Создан';\n    const res = order?.status\n\n    const contClass = `${styles.cont} mt-15 mb-15 pl-10 mr-10`;\n    const numberClass = `${styles.number}  mb-10 text text_type_digits-default`;\n    const totalClass = `${styles.total} text text_type_digits-default`\n    const ingredContClass = `${styles.ingredCont} mt-15`\n    // @ts-ignore\n    const statusClass = `text text_type_main-small ${styles[res]}`;\n    const scrollCont = `custom-scroll mt-10 mb-10  ${styles.scrollCont}`;\n    const nameClass = `mb-3 text text_type_main-medium ${styles.name}`;\n    const footerClass = `${styles.footer} mt-10`;\n    const sumClass = `${styles.sum} text text_type_digits-default pr-1`\n\n    return (\n        <div className={contClass}>\n            <h3 className={numberClass}>#{number}</h3>\n            <div className={nameClass}>{order?.name}</div>\n            <div className={statusClass}>\n                {statusText}\n            </div>\n            <div className={ingredContClass}>\n                <div className='mb-6 text text_type_main-medium'>Состав:</div>\n                <div className={scrollCont}>\n                    <div className={`mb-10 pr-6 ${styles.ingredients}`}>\n                    {filterIngredients.map((item: any, index: number) => {\n                        return (\n                            <div key={index}  className={styles.ingredient}>\n                                    <div\n                                        className={styles.image}\n                                        style={{\n                                            backgroundImage: 'url(' + item[0]?.image_mobile + ')',\n                                            backgroundPosition: 'center',\n                                        }}\n                                    />\n                                    <p className=\"text text_type_main-default pr-5\">{item[0]?.name}</p>\n                                    <p className={sumClass}>\n                                        {item[0]?.type === 'bun' ? `2 x ${item[0]?.price}` : `${item[1]} x ${item[0]?.price}`}\n                                    </p>\n                                <CurrencyIcon type='primary' />\n                                </div>\n                        );\n                    })}\n                    </div>\n                </div>\n            </div>\n            <div className={footerClass}>\n                <div className='text text_type_main-default text_color_inactive'>\n                    {orderDate}\n                </div>\n                <div className={totalClass}>\n                    <span className='mr-2'>{total}</span>\n                    <CurrencyIcon type='primary' />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default FeedOrderDetails;\n","import React, {useEffect, FC} from 'react';\nimport styles from './feed.module.css';\nimport {WS_START, WS_CONNECTION_CLOSE} from \"../../services/actions/ws-actions\";\nimport {TOrder} from \"../../types/data-types\";\nimport {useDispatch, useSelector} from '../../utils/hooks';\n\nimport OrderCard from \"../order-card/order-card\";\n\nconst Feed: FC = () => {\n    const orders = useSelector(store => {\n        return store.wsReduser.orders\n    }) || [];\n    const total = useSelector(store => {\n        return store.wsReduser.total\n    }) || 0;\n    const totalToday = useSelector(store => {\n        return store.wsReduser.totalToday\n    }) || 0;\n    const dispatch = useDispatch();\n    const scrollCont = `custom-scroll  ${styles.cont}`;\n    const scrollOrdersCont = `custom-scroll ml-10 pl-10 ${styles.right}`;\n    const orderContClass = `${styles.ordersCont} mb-15`;\n    const orderListClass = `${styles.ordersList} mr-6`\n    const ordersClass = `${styles.ordersWidth} mr-6`\n    const orderClass = `${styles.order} text text_type_digits-default mr-9`\n    const totalClass = `${styles.total} text text_type_digits-large`\n\n    useEffect(() => {\n        dispatch({type: WS_START, payload: ''});\n        return () => {\n            dispatch({type: WS_CONNECTION_CLOSE, payload: ''})\n        }\n    }, []);\n    return (\n        <div className={styles.feed}>\n            <h1 className='text text_type_main-large pt-8 mb-4'>Лента заказов</h1>\n            <div  className={styles.feedCont}>\n                <section className={styles.left}>\n                    <div className={scrollCont}>\n                        {[...orders].reverse().map((order: TOrder, index: number) =>\n                            <OrderCard order={order} key={index}/>)}\n                    </div>\n                </section>\n\n                <section className={scrollOrdersCont}>\n                    <div className={orderContClass}>\n                        <div className={ordersClass}>\n                            <div className='text text_type_main-medium mb-6'>\n                                Готовы:\n                            </div>\n                            <ul className={orderListClass}>\n                                {orders.filter((el: TOrder) => el.status === 'done').map((el, index) => {\n                                    return <li className={orderClass}\n                                               key={index}>{el.number}</li>\n                                })}\n                            </ul>\n                        </div>\n                        <div className={ordersClass}>\n                            <div className=\"text text_type_main-medium  mb-6\">\n                                В работе:\n                            </div>\n                            <ul className={orderListClass}>\n                                {orders.filter((el: TOrder) => el.status === 'pending').map((el, index) => {\n                                    return <li className=\"text text_type_digits-default\" key={index}>{el.number}</li>\n                                })}\n                            </ul>\n                        </div>\n                    </div>\n                    <div className=\"text text_type_main-medium mb-15\">\n                        Выполнено за всё время:\n                        <div\n                        className={totalClass}>{total}</div>\n                    </div>\n                    <div className=\"text text_type_main-medium mb-10\">\n                        Выполнено за сегодня:\n                        <div\n                        className={totalClass}>{totalToday}</div>\n                    </div>\n                </section>\n            </div>\n        </div>\n\n    )\n};\n\nexport default Feed;\n","import React, { FC, useEffect } from 'react'\nimport FeedOrderDetails from '../components/feed-order-details/feed-order-details'\nimport styles from './commonStyles.module.css'\nimport { WS_CONNECTION_CLOSE, WS_START } from '../services/actions/ws-actions'\nimport { useDispatch, useSelector } from '../utils/hooks'\n\nconst OrderCardDetails: FC = () => {\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch({ type: WS_START, payload: '' })\n    return () => {\n      dispatch({ type: WS_CONNECTION_CLOSE, payload: '' })\n    }\n  }, [])\n  return (\n    <div className={styles.ingredient}>\n      <FeedOrderDetails />\n    </div>\n  )\n}\n\nexport default OrderCardDetails\n","import React, { FC, useEffect } from 'react'\nimport FeedOrderDetails from '../components/feed-order-details/feed-order-details'\nimport styles from './commonStyles.module.css'\nimport {WS_CONNECTION_CLOSE, WS_PRIVAT_START} from '../services/actions/ws-actions'\nimport { useDispatch } from '../utils/hooks'\n\nconst OrderCardDetails: FC = () => {\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch({type: WS_PRIVAT_START, payload: ''});\n    return () => {\n      dispatch({type: WS_CONNECTION_CLOSE, payload: ''})\n    }\n  }, []);\n  return (\n    <div className={styles.ingredient}>\n      <FeedOrderDetails />\n    </div>\n  )\n}\n\nexport default OrderCardDetails\n","import React, {useEffect, FC} from 'react';\nimport {DndProvider} from 'react-dnd'\nimport {HTML5Backend} from 'react-dnd-html5-backend';\nimport {Switch, Route, useLocation, useHistory} from 'react-router-dom';\nimport {useDispatch} from '../../utils/hooks';\n\nimport styles from './app.module.css';\n\nimport AppHeader from \"../app-header/app-header\";\nimport BurgerIngredients from \"../burger-ingredients/burger-ingredients\";\nimport BurgerConstructor from \"../burger-constructor/burger-constructor\";\nimport NotFound from '../../pages/not-found';\nimport Login from '../../pages/login';\nimport Register from '../../pages/register';\nimport Ingredient from '../../pages/ingredient';\nimport ForgotPassword from '../../pages/forgot-password';\nimport ResetPassword from '../../pages/reset-password';\nimport Profile from '../../pages/profile';\nimport {getUser} from '../../services/actions/user-actions';\nimport ProtectedRoute from '../protected-route/protected-route';\nimport Modal from \"../modal/modal\";\nimport IngredientDetails from \"../ingredient-details/ingredient-details\";\nimport {DELETE_INGREDIENT_DETAILS} from \"../../services/actions/actions\"\nimport {getIngredients} from '../../services/actions/actions';\nimport FeedOrderDetails from \"../feed-order-details/feed-order-details\";\nimport Feed from \"../feed/feed\";\nimport OrderCardDetails from \"../../pages/order-card-details\";\nimport ProfileOrderDetails from \"../../pages/profile-order-details\";\nimport {PUBLIC_URL} from \"../../constants\";\n\nconst pUrl = PUBLIC_URL;\n\nconst App:FC = () => {\n    const dispatch = useDispatch();\n    const location = useLocation();\n    const history = useHistory();\n    const state = location.state as any;\n    const background = state && state.background;\n    const refreshToken = localStorage.getItem('refreshToken');\n\n    useEffect(() => {\n        dispatch(getIngredients())\n    }, [])\n\n    useEffect(() => {\n        dispatch(getUser())\n    }, [refreshToken])\n\n    const handleCloseModal = ():void  => {\n        dispatch({\n            type: DELETE_INGREDIENT_DETAILS\n        })\n        history.goBack();\n    };\n\n    const titleClasses = `text text_type_main-large pt-4 ${styles.title}`;\n    return (\n        <div className=\"App\">\n            <AppHeader/>\n            <Switch location={background || location}>\n                <Route path={`${pUrl}/`} exact={true}>\n                    <div className={styles.content}>\n                        <h1 className={titleClasses}>Соберите бургер</h1>\n                        <DndProvider backend={HTML5Backend}>\n                            <BurgerIngredients/>\n                            <BurgerConstructor/>\n                        </DndProvider>\n                    </div>\n                </Route>\n                <Route path={`${pUrl}/login`} component={Login} exact={true}/>\n                <Route path={`${pUrl}/register`} component={Register} exact={true}/>\n                <Route path={`${pUrl}/forgot-password`} component={ForgotPassword} exact={true}/>\n                <Route path={`${pUrl}/reset-password`} component={ResetPassword}/>\n                <Route path={`${pUrl}/feed/:id`} component={OrderCardDetails}/>\n                <Route path={`${pUrl}/feed`}>\n                    <Feed/>\n                </Route>\n                <ProtectedRoute path={`${pUrl}//profile/orders/:id`}>\n                    <ProfileOrderDetails/>\n                </ProtectedRoute>\n                <ProtectedRoute path={`${pUrl}/profile/orders`}>\n                    <Profile/>\n                </ProtectedRoute>\n                <ProtectedRoute path={`${pUrl}//profile`}>\n                    <Profile/>\n                </ProtectedRoute>\n                <Route path={`${pUrl}/ingredients/:id`} component={Ingredient}/>\n                <Route component={NotFound}/>\n            </Switch>\n            {background &&\n            <Route path={`${pUrl}/ingredients/:id`}>\n                <Modal\n                    title='Детали ингредиента'\n                    close={handleCloseModal}\n                >\n                    <IngredientDetails/>\n                </Modal>\n            </Route>}\n            {background &&\n            <ProtectedRoute path={`${pUrl}/profile/orders/:id`}>\n                <Modal\n                    title=''\n                    close={handleCloseModal}\n                >\n                    <FeedOrderDetails/>\n                </Modal>\n            </ProtectedRoute>\n            }\n            {background &&\n            <Route path={`${pUrl}/feed/:id`}>\n                <Modal\n                    title=''\n                    close={handleCloseModal}\n                >\n                    <FeedOrderDetails/>\n                </Modal>\n            </Route>\n            }\n        </div>\n    );\n};\n\nexport default App;\n","import {\n  GET_INGREDIENTS_REQUEST,\n  GET_INGREDIENTS_SUCCESS,\n  GET_INGREDIENTS_ERROR,\n  ADD_CONSTRUCTOR_INGREDIENT,\n  DELETE_CONSTRUCTOR_INGREDIENT,\n  CLEAR_CONSTRUCTOR,\n  CHANGE_INGREDIENTS_ORDER,\n  SET_INGREDIENT_DETAILS,\n  DELETE_INGREDIENT_DETAILS,\n  GET_ORDER_REQUEST,\n  GET_ORDER_SUCCESS,\n  GET_ORDER_ERROR,\n  CLEAR_ORDER, TActions\n} from '../actions/actions'\nimport update from 'immutability-helper'\nimport {TCard, TIngredientDetails} from \"../../types/data-types\";\n\ntype TOrderDetails = {\n  name?: string,\n  order?: { number: number }\n}\n\nexport type TState = {\n  ingredients: Array<TCard> | null,\n  ingredientsRequest: boolean,\n  ingredientsError: boolean,\n  order: TOrderDetails,\n  orderRequest: boolean,\n  orderError: boolean,\n  constructorIngredients: { buns: Array<TCard>, toppings: Array<TCard> },\n  ingredientDetails: TIngredientDetails,\n  ingredientsFailed: boolean,\n  orderFailed: boolean\n};\n\nconst initialState = {\n  ingredients: [],\n  ingredientsRequest: false,\n  ingredientsError: false,\n  order: {},\n  orderRequest: false,\n  orderError: false,\n  constructorIngredients: { buns: [], toppings: [] },\n  ingredientDetails: {},\n  ingredientsFailed: false,\n  orderFailed: false\n}\n\nexport const reducer = (state: TState = initialState, action: TActions): TState => {\n  switch (action.type) {\n    case GET_INGREDIENTS_REQUEST: {\n      return {\n        ...state,\n        ingredientsRequest: true\n      }\n    }\n    case GET_INGREDIENTS_SUCCESS: {\n      return {\n        ...state,\n        ingredientsFailed: false,\n        ingredientsRequest: false,\n        ingredients: action.ingredients.data\n      }\n    }\n    case GET_INGREDIENTS_ERROR: {\n      return {\n        ...state,\n        ...initialState,\n        ingredientsError: true\n      }\n    }\n\n    case GET_ORDER_REQUEST: {\n      return {\n        ...state,\n        orderRequest: true\n      }\n    }\n    case GET_ORDER_SUCCESS: {\n      return {\n        ...state,\n        orderFailed: false,\n        orderRequest: false,\n        order: action.order\n      }\n    }\n    case GET_ORDER_ERROR: {\n      return {\n        ...state,\n        ...initialState,\n        orderError: true\n      }\n    }\n\n    case CLEAR_ORDER: {\n      return {\n        ...state,\n        order: {}\n      }\n    }\n\n    case ADD_CONSTRUCTOR_INGREDIENT: {\n      return {\n        ...state,\n        constructorIngredients:\n          action.card.type === 'bun'\n            ? {\n                buns: [action.card],\n                toppings: [...state.constructorIngredients.toppings]\n              }\n            : {\n                buns: [...state.constructorIngredients.buns],\n                toppings: [...state.constructorIngredients.toppings, action.card]\n              }\n      }\n    }\n\n    case DELETE_CONSTRUCTOR_INGREDIENT: {\n      return {\n        ...state,\n        constructorIngredients: {\n          buns: [...state.constructorIngredients.buns],\n          toppings: [...state.constructorIngredients.toppings.filter((card, guid) => card.guid !== action.guid)]\n        }\n      }\n    }\n    case CLEAR_CONSTRUCTOR: {\n      return {\n        ...state,\n        constructorIngredients: { buns: [], toppings: [] }\n      }\n    }\n\n    case SET_INGREDIENT_DETAILS: {\n      return {\n        ...state,\n        ingredientDetails: action.card\n      }\n    }\n\n    case DELETE_INGREDIENT_DETAILS: {\n      return {\n        ...state,\n        ingredientDetails: {}\n      }\n    }\n    case CHANGE_INGREDIENTS_ORDER: {\n      const movedElement = update(state.constructorIngredients.toppings, { $splice: [[action.dragIndex, 1]] })\n      const newOrderArr = update(movedElement, {\n        $splice: [[action.hoverIndex, 0, state.constructorIngredients.toppings[action.dragIndex]]]\n      })\n\n      return {\n        ...state,\n        constructorIngredients: {\n          ...state.constructorIngredients,\n          /*                    buns: [...state.constructorIngredients.buns],*/\n          toppings: newOrderArr\n        }\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import {\n  REGISTER_USER_REQUEST,\n  REGISTER_USER_REQUEST_SUCCESS,\n  REGISTER_USER_REQUEST_FAILED,\n  LOGIN_REQUEST,\n  LOGIN_REQUEST_SUCCESS,\n  LOGIN_REQUEST_FAILED,\n  SET_IS_AUTH,\n  RESET_IS_AUTH,\n  SET_USER,\n  RESET_USER,\n  FORGOT_PASSWORD_REQUEST,\n  FORGOT_PASSWORD_REQUEST_SUCCESS,\n  FORGOT_PASSWORD_REQUEST_FAILED,\n  GET_USER_REQUEST,\n  GET_USER_REQUEST_SUCCESS,\n  GET_USER_REQUEST_FAILED,\n  RESET_PASSWORD_REQUEST,\n  RESET_PASSWORD_REQUEST_SUCCESS,\n  RESET_PASSWORD_REQUEST_FAILED,\n  LOGOUT_REQUEST_SUCCESS,\n  LOGOUT_REQUEST, TUserActions\n} from '../actions/user-actions'\nimport {TUser} from \"../../types/data-types\";\n\nexport type TUserState = {\n  registerUserRequest: boolean,\n  registerUserRequestFailed: boolean,\n  registerUserSuccess: boolean,\n  loginRequest: boolean,\n  loginRequestFailed: boolean,\n  loginUserSuccess: boolean,\n  user: TUser,\n  token: string,\n  forgotPasswordSuccess: boolean,\n  forgotPasswordRequest: boolean,\n  forgotPasswordRequestFailed: boolean,\n  resetPasswordSuccess: boolean,\n  resetPasswordRequest: boolean,\n  resetPasswordRequestFailed: boolean,\n  isAuth: boolean,\n  getUserRequest: boolean,\n  getUserRequestFailed: boolean,\n  isUserLoaded: boolean\n};\n\nconst initialState: TUserState = {\n  registerUserRequest: false,\n  registerUserRequestFailed: false,\n  registerUserSuccess: false,\n  loginUserSuccess: false,\n  user: { email: '', name: '' },\n  token: '',\n  forgotPasswordSuccess: false,\n  forgotPasswordRequest: false,\n  forgotPasswordRequestFailed: true,\n  resetPasswordSuccess: false,\n  resetPasswordRequest: false,\n  resetPasswordRequestFailed: true,\n  isAuth: false,\n  loginRequest: false,\n  loginRequestFailed: false,\n  getUserRequest: false,\n  getUserRequestFailed: false,\n  isUserLoaded: false\n}\n\nexport const userReducer = (state: TUserState = initialState, action: TUserActions): TUserState  => {\n  switch (action.type) {\n    case REGISTER_USER_REQUEST: {\n      return { ...state, registerUserRequest: true }\n    }\n    case REGISTER_USER_REQUEST_SUCCESS: {\n      return {\n        ...state,\n        registerUserSuccess: true,\n        registerUserRequest: false,\n        registerUserRequestFailed: false\n      }\n    }\n    case REGISTER_USER_REQUEST_FAILED: {\n      return {\n        ...state,\n        registerUserRequest: false,\n        registerUserRequestFailed: true,\n        registerUserSuccess: false\n      }\n    }\n    case SET_IS_AUTH: {\n      localStorage.setItem('refreshToken', action.refreshToken);\n      return {\n        ...state,\n        isAuth: true\n      }\n    }\n\n    case RESET_IS_AUTH: {\n      localStorage.removeItem('accessToken')\n      localStorage.removeItem('refreshToken')\n      return {\n        ...state,\n        isAuth: false\n      }\n    }\n\n    case LOGIN_REQUEST: {\n      return {\n        ...state,\n        loginRequest: true,\n        loginUserSuccess: false,\n        loginRequestFailed: false\n      }\n    }\n\n    case LOGIN_REQUEST_SUCCESS: {\n      return {\n        ...state,\n        loginRequest: false,\n        loginRequestFailed: false,\n        loginUserSuccess: true\n      }\n    }\n\n    case LOGOUT_REQUEST: {\n      return {\n        ...state,\n        loginUserSuccess: false\n      }\n    }\n\n    case LOGOUT_REQUEST_SUCCESS: {\n      return {\n        ...state,\n        loginUserSuccess: false\n      }\n    }\n\n    case LOGIN_REQUEST_FAILED: {\n      return {\n        ...state,\n        loginRequest: false,\n        loginRequestFailed: true,\n        loginUserSuccess: false\n      }\n    }\n    case SET_USER: {\n      return {\n        ...state,\n        ...action.user\n      }\n    }\n\n    case RESET_USER: {\n      return {\n        ...state,\n        user: { email: '', name: '' }\n      }\n    }\n\n    case GET_USER_REQUEST: {\n      return {\n        ...state,\n        getUserRequest: true\n      }\n    }\n\n    case GET_USER_REQUEST_SUCCESS: {\n      return {\n        ...state,\n        getUserRequest: false,\n        getUserRequestFailed: false,\n        isUserLoaded: true\n      }\n    }\n\n    case GET_USER_REQUEST_FAILED: {\n      return {\n        ...state,\n        getUserRequest: false,\n        getUserRequestFailed: true\n      }\n    }\n    case FORGOT_PASSWORD_REQUEST: {\n      return {\n        ...state,\n        forgotPasswordRequest: true\n      }\n    }\n\n    case FORGOT_PASSWORD_REQUEST_SUCCESS: {\n      return {\n        ...state,\n        forgotPasswordRequest: false,\n        forgotPasswordRequestFailed: false,\n        forgotPasswordSuccess: true\n      }\n    }\n\n    case FORGOT_PASSWORD_REQUEST_FAILED: {\n      return {\n        ...state,\n        forgotPasswordRequest: false,\n        forgotPasswordRequestFailed: true\n      }\n    }\n    case RESET_PASSWORD_REQUEST: {\n      return {\n        ...state,\n        resetPasswordRequest: true\n      }\n    }\n\n    case RESET_PASSWORD_REQUEST_SUCCESS: {\n      return {\n        ...state,\n        resetPasswordRequest: false,\n        resetPasswordRequestFailed: false,\n        resetPasswordSuccess: true\n      }\n    }\n\n    case RESET_PASSWORD_REQUEST_FAILED: {\n      return {\n        ...state,\n        resetPasswordRequest: false,\n        resetPasswordRequestFailed: true\n      }\n    }\n\n    default:\n      return state\n  }\n}\n","import { TOrder } from '../../types/data-types';\nimport { TWsActions, WS_CONNECTION_CLOSE, WS_START, WS_GET_MESSAGE } from '../actions/ws-actions';\n\ntype TWsState = {\n    wsConnected: boolean;\n    orders: Array<TOrder>;\n    total: number;\n    totalToday: number;\n}\n\nconst initialState:TWsState = {\n    wsConnected: false,\n    orders: [],\n    total: 0,\n    totalToday: 0,\n}\n\nexport const wsReducer = (state = initialState, action: TWsActions): TWsState => {\n    switch (action.type) {\n        case WS_START: {\n            return {\n                ...state,\n                wsConnected: true,\n            }\n        }\n        case WS_CONNECTION_CLOSE: {\n            return {\n                ...state,\n                wsConnected: false,\n            }\n        }\n        case WS_GET_MESSAGE: {\n            return {\n                ...state,\n                orders: action.payload.orders,\n                total: action.payload.total,\n                totalToday: action.payload.totalToday,\n            }\n        }\n        default: return state;\n    }\n}\n","import { combineReducers } from 'redux'\nimport { reducer } from './reducers'\nimport { userReducer } from './user-reducers'\nimport { wsReducer } from './ws-redusers'\n\nexport const rootReducer = combineReducers({\n  reducer: reducer,\n  userReducer: userReducer,\n  wsReduser: wsReducer\n})\n","import { applyMiddleware, createStore } from 'redux'\nimport thunk from 'redux-thunk'\nimport { rootReducer } from './reducers'\nimport { socketMiddleware } from './socket-middleware'\nimport { WS_API_URL } from '../constants'\nimport { TWsActionsType } from '../types/data-types'\nimport { WS_CONNECTION_CLOSE, WS_START, WS_PRIVAT_START, WS_CONNECTION_SUCCESS, WS_GET_MESSAGE } from './actions/ws-actions'\nimport { compose } from 'redux'\n\nconst wsActions: TWsActionsType = {\n  wsInit: WS_START,\n  wsPrivatInit: WS_PRIVAT_START,\n  wsClose: WS_CONNECTION_CLOSE,\n  onOpen: WS_CONNECTION_SUCCESS,\n  onMessage: WS_GET_MESSAGE\n}\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose\n  }\n}\n\nexport const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst enhancer = composeEnhancers(applyMiddleware(thunk, socketMiddleware(`${WS_API_URL}/orders`, wsActions)))\n\nexport const store = createStore(rootReducer, enhancer)\n","import { AppDispatch, RootState } from '../types/data-types'\nimport { TWsActions } from './actions/ws-actions'\nimport { Middleware, MiddlewareAPI } from 'redux'\nimport { TWsActionsType } from '../types/data-types'\n\nexport const socketMiddleware = (wsUrl: string, wsActions: TWsActionsType): Middleware => {\n  return ((store: MiddlewareAPI<AppDispatch, RootState>) => {\n    let socket: WebSocket | null = null\n\n    return next => (action: TWsActions) => {\n      const { dispatch } = store\n      const { type } = action\n      const { wsInit, wsPrivatInit, wsClose, onOpen, onMessage } = wsActions\n\n      if (type === wsInit) {\n        socket = new WebSocket(`${wsUrl}/all`)\n      }\n      if (type === wsPrivatInit) {\n        const token = localStorage.getItem('accessToken')\n        if(token) socket = new WebSocket(`${wsUrl}?token=${token!.split(' ')[1]}`)\n      }\n\n      if (socket) {\n        if (type === wsClose) socket.close(1000, 'Closed by user')\n\n        socket.onopen = (event: Event) => {\n          dispatch({ type: onOpen, payload: event })\n        }\n\n        socket.onmessage = (event: MessageEvent) => {\n          const data = JSON.parse(event.data)\n          dispatch({ type: onMessage, payload: data })\n        }\n\n        socket.onclose = (event: Event) => {\n          console.log('WS connection closed')\n        }\n      }\n      next(action)\n    }\n  }) as Middleware\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\n\nimport './index.css';\nimport App from './components/app/app';\n\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport { store } from './services/store';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <Router>\n                <App/>\n            </Router>\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root'),\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constructor\":\"burger-constructor_constructor__2Wifa\",\"list\":\"burger-constructor_list__2lXaw\",\"top\":\"burger-constructor_top__3B8eW\",\"center\":\"burger-constructor_center__1jIL2\",\"bottom\":\"burger-constructor_bottom__1l2yp\",\"total\":\"burger-constructor_total__2z4fk\",\"totalCont\":\"burger-constructor_totalCont__2bZwY\",\"scrollCont\":\"burger-constructor_scrollCont__kOtU6\",\"info\":\"burger-constructor_info__A3JBd\",\"link\":\"burger-constructor_link__1ooeN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed\":\"feed_feed__3uAFb\",\"feedCont\":\"feed_feedCont__3Q5Gn\",\"cont\":\"feed_cont__3enyk\",\"link\":\"feed_link__3iZay\",\"right\":\"feed_right__1GQ3P\",\"container\":\"feed_container__2dAnS\",\"ordersCont\":\"feed_ordersCont__3EvXl\",\"ordersWidth\":\"feed_ordersWidth__qSpzR\",\"order\":\"feed_order__2DBCd\",\"ordersList\":\"feed_ordersList__3A6g5\",\"total\":\"feed_total__2rC_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__1iHLW\",\"content\":\"app-header_content__KCd-V\",\"nav\":\"app-header_nav__1_idE\",\"logo\":\"app-header_logo__zVEfY\",\"navItem\":\"app-header_navItem__2Tbe-\",\"login\":\"app-header_login__3afH_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"id\":\"indredient-details_id__mILwF\",\"idText\":\"indredient-details_idText__2fTcJ\",\"image\":\"indredient-details_image__2qheu\",\"light\":\"indredient-details_light__5OKHl\",\"navy\":\"indredient-details_navy__2bOVP\",\"details\":\"indredient-details_details__1JNpe\",\"detailsCard\":\"indredient-details_detailsCard__2X1Z_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"id\":\"order-details_id__1POxV\",\"idText\":\"order-details_idText__I2Tdo\",\"image\":\"order-details_image__lnOoe\",\"light\":\"order-details_light__3rvcO\",\"navy\":\"order-details_navy__2_mPx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"burger-ingredients_tabs__1yNyE\",\"ingredients\":\"burger-ingredients_ingredients__2TY9H\",\"title\":\"burger-ingredients_title__32v1n\",\"scrollCont\":\"burger-ingredients_scrollCont__2XeTx\",\"cards\":\"burger-ingredients_cards__xIjNZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ingredient-card_card__1cRZ7\",\"image\":\"ingredient-card_image__3LOg0\",\"cost\":\"ingredient-card_cost__A5E-m\",\"link\":\"ingredient-card_link__2SBZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderDetails\":\"modal_orderDetails__1RTQ_\",\"closeIcon\":\"modal_closeIcon__1s4Qd\",\"title\":\"modal_title__1efUU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"not-found_wrapper__zKTuj\",\"container\":\"not-found_container__heFy6\",\"content\":\"not-found_content__bTjDH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"app_App__3t73x\",\"title\":\"app_title__2Mz9y\",\"content\":\"app_content__1uD0k\",\"App-logo\":\"app_App-logo__1u9fY\",\"App-logo-spin\":\"app_App-logo-spin__1cpH1\",\"App-header\":\"app_App-header__1ofuY\",\"App-link\":\"app_App-link__3q4JB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"constructor-card_listItem__1dC_D\"};"],"sourceRoot":""}